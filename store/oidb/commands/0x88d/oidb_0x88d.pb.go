// Code generated by protoc-gen-go. DO NOT EDIT.
// source: oidb_0x88d.proto

package oidb_0x88d

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GroupHeadPortraitInfo struct {
	RptUint32PicId       *uint32  `protobuf:"varint,1,opt,name=rpt_uint32_pic_id,json=rptUint32PicId" json:"rpt_uint32_pic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupHeadPortraitInfo) Reset()         { *m = GroupHeadPortraitInfo{} }
func (m *GroupHeadPortraitInfo) String() string { return proto.CompactTextString(m) }
func (*GroupHeadPortraitInfo) ProtoMessage()    {}
func (*GroupHeadPortraitInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0114f5596d33f534, []int{0}
}

func (m *GroupHeadPortraitInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupHeadPortraitInfo.Unmarshal(m, b)
}
func (m *GroupHeadPortraitInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupHeadPortraitInfo.Marshal(b, m, deterministic)
}
func (m *GroupHeadPortraitInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupHeadPortraitInfo.Merge(m, src)
}
func (m *GroupHeadPortraitInfo) XXX_Size() int {
	return xxx_messageInfo_GroupHeadPortraitInfo.Size(m)
}
func (m *GroupHeadPortraitInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupHeadPortraitInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GroupHeadPortraitInfo proto.InternalMessageInfo

func (m *GroupHeadPortraitInfo) GetRptUint32PicId() uint32 {
	if m != nil && m.RptUint32PicId != nil {
		return *m.RptUint32PicId
	}
	return 0
}

type GroupHeadPortrait struct {
	Uint32PicCnt           *uint32                  `protobuf:"varint,1,opt,name=uint32_pic_cnt,json=uint32PicCnt" json:"uint32_pic_cnt,omitempty"`
	RptMsgInfo             []*GroupHeadPortraitInfo `protobuf:"bytes,2,rep,name=rpt_msg_info,json=rptMsgInfo" json:"rpt_msg_info,omitempty"`
	Uint32DefaultId        *uint32                  `protobuf:"varint,3,opt,name=uint32_default_id,json=uint32DefaultId" json:"uint32_default_id,omitempty"`
	Uint32VerifyingPicCnt  *uint32                  `protobuf:"varint,4,opt,name=uint32_verifying_pic_cnt,json=uint32VerifyingPicCnt" json:"uint32_verifying_pic_cnt,omitempty"`
	RptMsgVerifyingpicInfo []*GroupHeadPortraitInfo `protobuf:"bytes,5,rep,name=rpt_msg_verifyingpic_info,json=rptMsgVerifyingpicInfo" json:"rpt_msg_verifyingpic_info,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                 `json:"-"`
	XXX_unrecognized       []byte                   `json:"-"`
	XXX_sizecache          int32                    `json:"-"`
}

func (m *GroupHeadPortrait) Reset()         { *m = GroupHeadPortrait{} }
func (m *GroupHeadPortrait) String() string { return proto.CompactTextString(m) }
func (*GroupHeadPortrait) ProtoMessage()    {}
func (*GroupHeadPortrait) Descriptor() ([]byte, []int) {
	return fileDescriptor_0114f5596d33f534, []int{1}
}

func (m *GroupHeadPortrait) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupHeadPortrait.Unmarshal(m, b)
}
func (m *GroupHeadPortrait) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupHeadPortrait.Marshal(b, m, deterministic)
}
func (m *GroupHeadPortrait) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupHeadPortrait.Merge(m, src)
}
func (m *GroupHeadPortrait) XXX_Size() int {
	return xxx_messageInfo_GroupHeadPortrait.Size(m)
}
func (m *GroupHeadPortrait) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupHeadPortrait.DiscardUnknown(m)
}

var xxx_messageInfo_GroupHeadPortrait proto.InternalMessageInfo

func (m *GroupHeadPortrait) GetUint32PicCnt() uint32 {
	if m != nil && m.Uint32PicCnt != nil {
		return *m.Uint32PicCnt
	}
	return 0
}

func (m *GroupHeadPortrait) GetRptMsgInfo() []*GroupHeadPortraitInfo {
	if m != nil {
		return m.RptMsgInfo
	}
	return nil
}

func (m *GroupHeadPortrait) GetUint32DefaultId() uint32 {
	if m != nil && m.Uint32DefaultId != nil {
		return *m.Uint32DefaultId
	}
	return 0
}

func (m *GroupHeadPortrait) GetUint32VerifyingPicCnt() uint32 {
	if m != nil && m.Uint32VerifyingPicCnt != nil {
		return *m.Uint32VerifyingPicCnt
	}
	return 0
}

func (m *GroupHeadPortrait) GetRptMsgVerifyingpicInfo() []*GroupHeadPortraitInfo {
	if m != nil {
		return m.RptMsgVerifyingpicInfo
	}
	return nil
}

type GroupExInfoOnly struct {
	Uint32TribeId          *uint32  `protobuf:"varint,1,opt,name=uint32_tribe_id,json=uint32TribeId" json:"uint32_tribe_id,omitempty"`
	Uint32MoneyForAddGroup *uint32  `protobuf:"varint,2,opt,name=uint32_money_for_add_group,json=uint32MoneyForAddGroup" json:"uint32_money_for_add_group,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *GroupExInfoOnly) Reset()         { *m = GroupExInfoOnly{} }
func (m *GroupExInfoOnly) String() string { return proto.CompactTextString(m) }
func (*GroupExInfoOnly) ProtoMessage()    {}
func (*GroupExInfoOnly) Descriptor() ([]byte, []int) {
	return fileDescriptor_0114f5596d33f534, []int{2}
}

func (m *GroupExInfoOnly) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupExInfoOnly.Unmarshal(m, b)
}
func (m *GroupExInfoOnly) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupExInfoOnly.Marshal(b, m, deterministic)
}
func (m *GroupExInfoOnly) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupExInfoOnly.Merge(m, src)
}
func (m *GroupExInfoOnly) XXX_Size() int {
	return xxx_messageInfo_GroupExInfoOnly.Size(m)
}
func (m *GroupExInfoOnly) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupExInfoOnly.DiscardUnknown(m)
}

var xxx_messageInfo_GroupExInfoOnly proto.InternalMessageInfo

func (m *GroupExInfoOnly) GetUint32TribeId() uint32 {
	if m != nil && m.Uint32TribeId != nil {
		return *m.Uint32TribeId
	}
	return 0
}

func (m *GroupExInfoOnly) GetUint32MoneyForAddGroup() uint32 {
	if m != nil && m.Uint32MoneyForAddGroup != nil {
		return *m.Uint32MoneyForAddGroup
	}
	return 0
}

type GroupInfo struct {
	Uint64GroupOwner                              *uint64            `protobuf:"varint,1,opt,name=uint64_group_owner,json=uint64GroupOwner" json:"uint64_group_owner,omitempty"`
	Uint32GroupCreateTime                         *uint32            `protobuf:"varint,2,opt,name=uint32_group_create_time,json=uint32GroupCreateTime" json:"uint32_group_create_time,omitempty"`
	Uint32GroupFlag                               *uint32            `protobuf:"varint,3,opt,name=uint32_group_flag,json=uint32GroupFlag" json:"uint32_group_flag,omitempty"`
	Uint32GroupFlagExt                            *uint32            `protobuf:"varint,4,opt,name=uint32_group_flag_ext,json=uint32GroupFlagExt" json:"uint32_group_flag_ext,omitempty"`
	Uint32GroupMemberMaxNum                       *uint32            `protobuf:"varint,5,opt,name=uint32_group_member_max_num,json=uint32GroupMemberMaxNum" json:"uint32_group_member_max_num,omitempty"`
	Uint32GroupMemberNum                          *uint32            `protobuf:"varint,6,opt,name=uint32_group_member_num,json=uint32GroupMemberNum" json:"uint32_group_member_num,omitempty"`
	Uint32GroupOption                             *uint32            `protobuf:"varint,7,opt,name=uint32_group_option,json=uint32GroupOption" json:"uint32_group_option,omitempty"`
	Uint32GroupClassExt                           *uint32            `protobuf:"varint,8,opt,name=uint32_group_class_ext,json=uint32GroupClassExt" json:"uint32_group_class_ext,omitempty"`
	Uint32GroupSpecialClass                       *uint32            `protobuf:"varint,9,opt,name=uint32_group_special_class,json=uint32GroupSpecialClass" json:"uint32_group_special_class,omitempty"`
	Uint32GroupLevel                              *uint32            `protobuf:"varint,10,opt,name=uint32_group_level,json=uint32GroupLevel" json:"uint32_group_level,omitempty"`
	Uint32GroupFace                               *uint32            `protobuf:"varint,11,opt,name=uint32_group_face,json=uint32GroupFace" json:"uint32_group_face,omitempty"`
	Uint32GroupDefaultPage                        *uint32            `protobuf:"varint,12,opt,name=uint32_group_default_page,json=uint32GroupDefaultPage" json:"uint32_group_default_page,omitempty"`
	Uint32GroupInfoSeq                            *uint32            `protobuf:"varint,13,opt,name=uint32_group_info_seq,json=uint32GroupInfoSeq" json:"uint32_group_info_seq,omitempty"`
	Uint32GroupRoamingTime                        *uint32            `protobuf:"varint,14,opt,name=uint32_group_roaming_time,json=uint32GroupRoamingTime" json:"uint32_group_roaming_time,omitempty"`
	StringGroupName                               []byte             `protobuf:"bytes,15,opt,name=string_group_name,json=stringGroupName" json:"string_group_name,omitempty"`
	StringGroupMemo                               []byte             `protobuf:"bytes,16,opt,name=string_group_memo,json=stringGroupMemo" json:"string_group_memo,omitempty"`
	StringGroupFingerMemo                         []byte             `protobuf:"bytes,17,opt,name=string_group_finger_memo,json=stringGroupFingerMemo" json:"string_group_finger_memo,omitempty"`
	StringGroupClassText                          []byte             `protobuf:"bytes,18,opt,name=string_group_class_text,json=stringGroupClassText" json:"string_group_class_text,omitempty"`
	Uint32GroupAllianceCode                       []uint32           `protobuf:"varint,19,rep,name=uint32_group_alliance_code,json=uint32GroupAllianceCode" json:"uint32_group_alliance_code,omitempty"`
	Uint32GroupExtraAdmNum                        *uint32            `protobuf:"varint,20,opt,name=uint32_group_extra_adm_num,json=uint32GroupExtraAdmNum" json:"uint32_group_extra_adm_num,omitempty"`
	Uint64GroupUin                                *uint64            `protobuf:"varint,21,opt,name=uint64_group_uin,json=uint64GroupUin" json:"uint64_group_uin,omitempty"`
	Uint32GroupCurMsgSeq                          *uint32            `protobuf:"varint,22,opt,name=uint32_group_cur_msg_seq,json=uint32GroupCurMsgSeq" json:"uint32_group_cur_msg_seq,omitempty"`
	Uint32GroupLastMsgTime                        *uint32            `protobuf:"varint,23,opt,name=uint32_group_last_msg_time,json=uint32GroupLastMsgTime" json:"uint32_group_last_msg_time,omitempty"`
	StringGroupQuestion                           []byte             `protobuf:"bytes,24,opt,name=string_group_question,json=stringGroupQuestion" json:"string_group_question,omitempty"`
	StringGroupAnswer                             []byte             `protobuf:"bytes,25,opt,name=string_group_answer,json=stringGroupAnswer" json:"string_group_answer,omitempty"`
	Uint32GroupVisitorMaxNum                      *uint32            `protobuf:"varint,26,opt,name=uint32_group_visitor_max_num,json=uint32GroupVisitorMaxNum" json:"uint32_group_visitor_max_num,omitempty"`
	Uint32GroupVisitorCurNum                      *uint32            `protobuf:"varint,27,opt,name=uint32_group_visitor_cur_num,json=uint32GroupVisitorCurNum" json:"uint32_group_visitor_cur_num,omitempty"`
	Uint32LevelNameSeq                            *uint32            `protobuf:"varint,28,opt,name=uint32_level_name_seq,json=uint32LevelNameSeq" json:"uint32_level_name_seq,omitempty"`
	Uint32GroupAdminMaxNum                        *uint32            `protobuf:"varint,29,opt,name=uint32_group_admin_max_num,json=uint32GroupAdminMaxNum" json:"uint32_group_admin_max_num,omitempty"`
	Uint32GroupAioSkinTimestamp                   *uint32            `protobuf:"varint,30,opt,name=uint32_group_aio_skin_timestamp,json=uint32GroupAioSkinTimestamp" json:"uint32_group_aio_skin_timestamp,omitempty"`
	Uint32GroupBoardSkinTimestamp                 *uint32            `protobuf:"varint,31,opt,name=uint32_group_board_skin_timestamp,json=uint32GroupBoardSkinTimestamp" json:"uint32_group_board_skin_timestamp,omitempty"`
	StringGroupAioSkinUrl                         []byte             `protobuf:"bytes,32,opt,name=string_group_aio_skin_url,json=stringGroupAioSkinUrl" json:"string_group_aio_skin_url,omitempty"`
	StringGroupBoardSkinUrl                       []byte             `protobuf:"bytes,33,opt,name=string_group_board_skin_url,json=stringGroupBoardSkinUrl" json:"string_group_board_skin_url,omitempty"`
	Uint32GroupCoverSkinTimestamp                 *uint32            `protobuf:"varint,34,opt,name=uint32_group_cover_skin_timestamp,json=uint32GroupCoverSkinTimestamp" json:"uint32_group_cover_skin_timestamp,omitempty"`
	StringGroupCoverSkinUrl                       []byte             `protobuf:"bytes,35,opt,name=string_group_cover_skin_url,json=stringGroupCoverSkinUrl" json:"string_group_cover_skin_url,omitempty"`
	Uint32GroupGrade                              *uint32            `protobuf:"varint,36,opt,name=uint32_group_grade,json=uint32GroupGrade" json:"uint32_group_grade,omitempty"`
	Uint32ActiveMemberNum                         *uint32            `protobuf:"varint,37,opt,name=uint32_active_member_num,json=uint32ActiveMemberNum" json:"uint32_active_member_num,omitempty"`
	Uint32CertificationType                       *uint32            `protobuf:"varint,38,opt,name=uint32_certification_type,json=uint32CertificationType" json:"uint32_certification_type,omitempty"`
	StringCertificationText                       []byte             `protobuf:"bytes,39,opt,name=string_certification_text,json=stringCertificationText" json:"string_certification_text,omitempty"`
	StringGroupRichFingerMemo                     []byte             `protobuf:"bytes,40,opt,name=string_group_rich_finger_memo,json=stringGroupRichFingerMemo" json:"string_group_rich_finger_memo,omitempty"`
	RptTagRecord                                  []*TagRecord       `protobuf:"bytes,41,rep,name=rpt_tag_record,json=rptTagRecord" json:"rpt_tag_record,omitempty"`
	GroupGeoInfo                                  *GroupGeoInfo      `protobuf:"bytes,42,opt,name=group_geo_info,json=groupGeoInfo" json:"group_geo_info,omitempty"`
	Uint32HeadPortraitSeq                         *uint32            `protobuf:"varint,43,opt,name=uint32_head_portrait_seq,json=uint32HeadPortraitSeq" json:"uint32_head_portrait_seq,omitempty"`
	MsgHeadPortrait                               *GroupHeadPortrait `protobuf:"bytes,44,opt,name=msg_head_portrait,json=msgHeadPortrait" json:"msg_head_portrait,omitempty"`
	Uint32ShutupTimestamp                         *uint32            `protobuf:"varint,45,opt,name=uint32_shutup_timestamp,json=uint32ShutupTimestamp" json:"uint32_shutup_timestamp,omitempty"`
	Uint32ShutupTimestampMe                       *uint32            `protobuf:"varint,46,opt,name=uint32_shutup_timestamp_me,json=uint32ShutupTimestampMe" json:"uint32_shutup_timestamp_me,omitempty"`
	Uint32CreateSourceFlag                        *uint32            `protobuf:"varint,47,opt,name=uint32_create_source_flag,json=uint32CreateSourceFlag" json:"uint32_create_source_flag,omitempty"`
	Uint32CmduinMsgSeq                            *uint32            `protobuf:"varint,48,opt,name=uint32_cmduin_msg_seq,json=uint32CmduinMsgSeq" json:"uint32_cmduin_msg_seq,omitempty"`
	Uint32CmduinJoinTime                          *uint32            `protobuf:"varint,49,opt,name=uint32_cmduin_join_time,json=uint32CmduinJoinTime" json:"uint32_cmduin_join_time,omitempty"`
	Uint32CmduinUinFlag                           *uint32            `protobuf:"varint,50,opt,name=uint32_cmduin_uin_flag,json=uint32CmduinUinFlag" json:"uint32_cmduin_uin_flag,omitempty"`
	Uint32CmduinFlagEx                            *uint32            `protobuf:"varint,51,opt,name=uint32_cmduin_flag_ex,json=uint32CmduinFlagEx" json:"uint32_cmduin_flag_ex,omitempty"`
	Uint32CmduinNewMobileFlag                     *uint32            `protobuf:"varint,52,opt,name=uint32_cmduin_new_mobile_flag,json=uint32CmduinNewMobileFlag" json:"uint32_cmduin_new_mobile_flag,omitempty"`
	Uint32CmduinReadMsgSeq                        *uint32            `protobuf:"varint,53,opt,name=uint32_cmduin_read_msg_seq,json=uint32CmduinReadMsgSeq" json:"uint32_cmduin_read_msg_seq,omitempty"`
	Uint32CmduinLastMsgTime                       *uint32            `protobuf:"varint,54,opt,name=uint32_cmduin_last_msg_time,json=uint32CmduinLastMsgTime" json:"uint32_cmduin_last_msg_time,omitempty"`
	Uint32GroupTypeFlag                           *uint32            `protobuf:"varint,55,opt,name=uint32_group_type_flag,json=uint32GroupTypeFlag" json:"uint32_group_type_flag,omitempty"`
	Uint32AppPrivilegeFlag                        *uint32            `protobuf:"varint,56,opt,name=uint32_app_privilege_flag,json=uint32AppPrivilegeFlag" json:"uint32_app_privilege_flag,omitempty"`
	StGroupExInfo                                 *GroupExInfoOnly   `protobuf:"bytes,57,opt,name=st_group_ex_info,json=stGroupExInfo" json:"st_group_ex_info,omitempty"`
	Uint32GroupSecLevel                           *uint32            `protobuf:"varint,58,opt,name=uint32_group_sec_level,json=uint32GroupSecLevel" json:"uint32_group_sec_level,omitempty"`
	Uint32GroupSecLevelInfo                       *uint32            `protobuf:"varint,59,opt,name=uint32_group_sec_level_info,json=uint32GroupSecLevelInfo" json:"uint32_group_sec_level_info,omitempty"`
	Uint32CmduinPrivilege                         *uint32            `protobuf:"varint,60,opt,name=uint32_cmduin_privilege,json=uint32CmduinPrivilege" json:"uint32_cmduin_privilege,omitempty"`
	StringPoidInfo                                []byte             `protobuf:"bytes,61,opt,name=string_poid_info,json=stringPoidInfo" json:"string_poid_info,omitempty"`
	Uint32CmduinFlagEx2                           *uint32            `protobuf:"varint,62,opt,name=uint32_cmduin_flag_ex2,json=uint32CmduinFlagEx2" json:"uint32_cmduin_flag_ex2,omitempty"`
	Uint64ConfUin                                 *uint64            `protobuf:"varint,63,opt,name=uint64_conf_uin,json=uint64ConfUin" json:"uint64_conf_uin,omitempty"`
	Uint32ConfMaxMsgSeq                           *uint32            `protobuf:"varint,64,opt,name=uint32_conf_max_msg_seq,json=uint32ConfMaxMsgSeq" json:"uint32_conf_max_msg_seq,omitempty"`
	Uint32ConfToGroupTime                         *uint32            `protobuf:"varint,65,opt,name=uint32_conf_to_group_time,json=uint32ConfToGroupTime" json:"uint32_conf_to_group_time,omitempty"`
	Uint32PasswordRedbagTime                      *uint32            `protobuf:"varint,66,opt,name=uint32_password_redbag_time,json=uint32PasswordRedbagTime" json:"uint32_password_redbag_time,omitempty"`
	Uint64SubscriptionUin                         *uint64            `protobuf:"varint,67,opt,name=uint64_subscription_uin,json=uint64SubscriptionUin" json:"uint64_subscription_uin,omitempty"`
	Uint32MemberListChangeSeq                     *uint32            `protobuf:"varint,68,opt,name=uint32_member_list_change_seq,json=uint32MemberListChangeSeq" json:"uint32_member_list_change_seq,omitempty"`
	Uint32MembercardSeq                           *uint32            `protobuf:"varint,69,opt,name=uint32_membercard_seq,json=uint32MembercardSeq" json:"uint32_membercard_seq,omitempty"`
	Uint64RootId                                  *uint64            `protobuf:"varint,70,opt,name=uint64_root_id,json=uint64RootId" json:"uint64_root_id,omitempty"`
	Uint64ParentId                                *uint64            `protobuf:"varint,71,opt,name=uint64_parent_id,json=uint64ParentId" json:"uint64_parent_id,omitempty"`
	Uint32TeamSeq                                 *uint32            `protobuf:"varint,72,opt,name=uint32_team_seq,json=uint32TeamSeq" json:"uint32_team_seq,omitempty"`
	Uint64HistoryMsgBeginTime                     *uint64            `protobuf:"varint,73,opt,name=uint64_history_msg_begin_time,json=uint64HistoryMsgBeginTime" json:"uint64_history_msg_begin_time,omitempty"`
	Uint64InviteNoAuthNumLimit                    *uint64            `protobuf:"varint,74,opt,name=uint64_invite_no_auth_num_limit,json=uint64InviteNoAuthNumLimit" json:"uint64_invite_no_auth_num_limit,omitempty"`
	Uint32CmduinHistoryMsgSeq                     *uint32            `protobuf:"varint,75,opt,name=uint32_cmduin_history_msg_seq,json=uint32CmduinHistoryMsgSeq" json:"uint32_cmduin_history_msg_seq,omitempty"`
	Uint32CmduinJoinMsgSeq                        *uint32            `protobuf:"varint,76,opt,name=uint32_cmduin_join_msg_seq,json=uint32CmduinJoinMsgSeq" json:"uint32_cmduin_join_msg_seq,omitempty"`
	Uint32GroupFlagext3                           *uint32            `protobuf:"varint,77,opt,name=uint32_group_flagext3,json=uint32GroupFlagext3" json:"uint32_group_flagext3,omitempty"`
	Uint32GroupOpenAppid                          *uint32            `protobuf:"varint,78,opt,name=uint32_group_open_appid,json=uint32GroupOpenAppid" json:"uint32_group_open_appid,omitempty"`
	Uint32IsConfGroup                             *uint32            `protobuf:"varint,79,opt,name=uint32_is_conf_group,json=uint32IsConfGroup" json:"uint32_is_conf_group,omitempty"`
	Uint32IsModifyConfGroupFace                   *uint32            `protobuf:"varint,80,opt,name=uint32_is_modify_conf_group_face,json=uint32IsModifyConfGroupFace" json:"uint32_is_modify_conf_group_face,omitempty"`
	Uint32IsModifyConfGroupName                   *uint32            `protobuf:"varint,81,opt,name=uint32_is_modify_conf_group_name,json=uint32IsModifyConfGroupName" json:"uint32_is_modify_conf_group_name,omitempty"`
	Uint32NoFingerOpenFlag                        *uint32            `protobuf:"varint,82,opt,name=uint32_no_finger_open_flag,json=uint32NoFingerOpenFlag" json:"uint32_no_finger_open_flag,omitempty"`
	Uint32NoCodeFingerOpenFlag                    *uint32            `protobuf:"varint,83,opt,name=uint32_no_code_finger_open_flag,json=uint32NoCodeFingerOpenFlag" json:"uint32_no_code_finger_open_flag,omitempty"`
	Uint32AutoAgreeJoinGroupUserNumForNormalGroup *uint32            `protobuf:"varint,84,opt,name=uint32_auto_agree_join_group_user_num_for_normal_group,json=uint32AutoAgreeJoinGroupUserNumForNormalGroup" json:"uint32_auto_agree_join_group_user_num_for_normal_group,omitempty"`
	Uint32AutoAgreeJoinGroupUserNumForConfGroup   *uint32            `protobuf:"varint,85,opt,name=uint32_auto_agree_join_group_user_num_for_conf_group,json=uint32AutoAgreeJoinGroupUserNumForConfGroup" json:"uint32_auto_agree_join_group_user_num_for_conf_group,omitempty"`
	Uint32IsAllowConfGroupMemberNick              *uint32            `protobuf:"varint,86,opt,name=uint32_is_allow_conf_group_member_nick,json=uint32IsAllowConfGroupMemberNick" json:"uint32_is_allow_conf_group_member_nick,omitempty"`
	Uint32IsAllowConfGroupMemberAtAll             *uint32            `protobuf:"varint,87,opt,name=uint32_is_allow_conf_group_member_at_all,json=uint32IsAllowConfGroupMemberAtAll" json:"uint32_is_allow_conf_group_member_at_all,omitempty"`
	Uint32IsAllowConfGroupMemberModifyGroupName   *uint32            `protobuf:"varint,88,opt,name=uint32_is_allow_conf_group_member_modify_group_name,json=uint32IsAllowConfGroupMemberModifyGroupName" json:"uint32_is_allow_conf_group_member_modify_group_name,omitempty"`
	StringLongGroupName                           []byte             `protobuf:"bytes,89,opt,name=string_long_group_name,json=stringLongGroupName" json:"string_long_group_name,omitempty"`
	Uint32CmduinJoinRealMsgSeq                    *uint32            `protobuf:"varint,90,opt,name=uint32_cmduin_join_real_msg_seq,json=uint32CmduinJoinRealMsgSeq" json:"uint32_cmduin_join_real_msg_seq,omitempty"`
	Uint32IsGroupFreeze                           *uint32            `protobuf:"varint,91,opt,name=uint32_is_group_freeze,json=uint32IsGroupFreeze" json:"uint32_is_group_freeze,omitempty"`
	Uint32MsgLimitFrequency                       *uint32            `protobuf:"varint,92,opt,name=uint32_msg_limit_frequency,json=uint32MsgLimitFrequency" json:"uint32_msg_limit_frequency,omitempty"`
	XXX_NoUnkeyedLiteral                          struct{}           `json:"-"`
	XXX_unrecognized                              []byte             `json:"-"`
	XXX_sizecache                                 int32              `json:"-"`
}

func (m *GroupInfo) Reset()         { *m = GroupInfo{} }
func (m *GroupInfo) String() string { return proto.CompactTextString(m) }
func (*GroupInfo) ProtoMessage()    {}
func (*GroupInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0114f5596d33f534, []int{3}
}

func (m *GroupInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupInfo.Unmarshal(m, b)
}
func (m *GroupInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupInfo.Marshal(b, m, deterministic)
}
func (m *GroupInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupInfo.Merge(m, src)
}
func (m *GroupInfo) XXX_Size() int {
	return xxx_messageInfo_GroupInfo.Size(m)
}
func (m *GroupInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GroupInfo proto.InternalMessageInfo

func (m *GroupInfo) GetUint64GroupOwner() uint64 {
	if m != nil && m.Uint64GroupOwner != nil {
		return *m.Uint64GroupOwner
	}
	return 0
}

func (m *GroupInfo) GetUint32GroupCreateTime() uint32 {
	if m != nil && m.Uint32GroupCreateTime != nil {
		return *m.Uint32GroupCreateTime
	}
	return 0
}

func (m *GroupInfo) GetUint32GroupFlag() uint32 {
	if m != nil && m.Uint32GroupFlag != nil {
		return *m.Uint32GroupFlag
	}
	return 0
}

func (m *GroupInfo) GetUint32GroupFlagExt() uint32 {
	if m != nil && m.Uint32GroupFlagExt != nil {
		return *m.Uint32GroupFlagExt
	}
	return 0
}

func (m *GroupInfo) GetUint32GroupMemberMaxNum() uint32 {
	if m != nil && m.Uint32GroupMemberMaxNum != nil {
		return *m.Uint32GroupMemberMaxNum
	}
	return 0
}

func (m *GroupInfo) GetUint32GroupMemberNum() uint32 {
	if m != nil && m.Uint32GroupMemberNum != nil {
		return *m.Uint32GroupMemberNum
	}
	return 0
}

func (m *GroupInfo) GetUint32GroupOption() uint32 {
	if m != nil && m.Uint32GroupOption != nil {
		return *m.Uint32GroupOption
	}
	return 0
}

func (m *GroupInfo) GetUint32GroupClassExt() uint32 {
	if m != nil && m.Uint32GroupClassExt != nil {
		return *m.Uint32GroupClassExt
	}
	return 0
}

func (m *GroupInfo) GetUint32GroupSpecialClass() uint32 {
	if m != nil && m.Uint32GroupSpecialClass != nil {
		return *m.Uint32GroupSpecialClass
	}
	return 0
}

func (m *GroupInfo) GetUint32GroupLevel() uint32 {
	if m != nil && m.Uint32GroupLevel != nil {
		return *m.Uint32GroupLevel
	}
	return 0
}

func (m *GroupInfo) GetUint32GroupFace() uint32 {
	if m != nil && m.Uint32GroupFace != nil {
		return *m.Uint32GroupFace
	}
	return 0
}

func (m *GroupInfo) GetUint32GroupDefaultPage() uint32 {
	if m != nil && m.Uint32GroupDefaultPage != nil {
		return *m.Uint32GroupDefaultPage
	}
	return 0
}

func (m *GroupInfo) GetUint32GroupInfoSeq() uint32 {
	if m != nil && m.Uint32GroupInfoSeq != nil {
		return *m.Uint32GroupInfoSeq
	}
	return 0
}

func (m *GroupInfo) GetUint32GroupRoamingTime() uint32 {
	if m != nil && m.Uint32GroupRoamingTime != nil {
		return *m.Uint32GroupRoamingTime
	}
	return 0
}

func (m *GroupInfo) GetStringGroupName() []byte {
	if m != nil {
		return m.StringGroupName
	}
	return nil
}

func (m *GroupInfo) GetStringGroupMemo() []byte {
	if m != nil {
		return m.StringGroupMemo
	}
	return nil
}

func (m *GroupInfo) GetStringGroupFingerMemo() []byte {
	if m != nil {
		return m.StringGroupFingerMemo
	}
	return nil
}

func (m *GroupInfo) GetStringGroupClassText() []byte {
	if m != nil {
		return m.StringGroupClassText
	}
	return nil
}

func (m *GroupInfo) GetUint32GroupAllianceCode() []uint32 {
	if m != nil {
		return m.Uint32GroupAllianceCode
	}
	return nil
}

func (m *GroupInfo) GetUint32GroupExtraAdmNum() uint32 {
	if m != nil && m.Uint32GroupExtraAdmNum != nil {
		return *m.Uint32GroupExtraAdmNum
	}
	return 0
}

func (m *GroupInfo) GetUint64GroupUin() uint64 {
	if m != nil && m.Uint64GroupUin != nil {
		return *m.Uint64GroupUin
	}
	return 0
}

func (m *GroupInfo) GetUint32GroupCurMsgSeq() uint32 {
	if m != nil && m.Uint32GroupCurMsgSeq != nil {
		return *m.Uint32GroupCurMsgSeq
	}
	return 0
}

func (m *GroupInfo) GetUint32GroupLastMsgTime() uint32 {
	if m != nil && m.Uint32GroupLastMsgTime != nil {
		return *m.Uint32GroupLastMsgTime
	}
	return 0
}

func (m *GroupInfo) GetStringGroupQuestion() []byte {
	if m != nil {
		return m.StringGroupQuestion
	}
	return nil
}

func (m *GroupInfo) GetStringGroupAnswer() []byte {
	if m != nil {
		return m.StringGroupAnswer
	}
	return nil
}

func (m *GroupInfo) GetUint32GroupVisitorMaxNum() uint32 {
	if m != nil && m.Uint32GroupVisitorMaxNum != nil {
		return *m.Uint32GroupVisitorMaxNum
	}
	return 0
}

func (m *GroupInfo) GetUint32GroupVisitorCurNum() uint32 {
	if m != nil && m.Uint32GroupVisitorCurNum != nil {
		return *m.Uint32GroupVisitorCurNum
	}
	return 0
}

func (m *GroupInfo) GetUint32LevelNameSeq() uint32 {
	if m != nil && m.Uint32LevelNameSeq != nil {
		return *m.Uint32LevelNameSeq
	}
	return 0
}

func (m *GroupInfo) GetUint32GroupAdminMaxNum() uint32 {
	if m != nil && m.Uint32GroupAdminMaxNum != nil {
		return *m.Uint32GroupAdminMaxNum
	}
	return 0
}

func (m *GroupInfo) GetUint32GroupAioSkinTimestamp() uint32 {
	if m != nil && m.Uint32GroupAioSkinTimestamp != nil {
		return *m.Uint32GroupAioSkinTimestamp
	}
	return 0
}

func (m *GroupInfo) GetUint32GroupBoardSkinTimestamp() uint32 {
	if m != nil && m.Uint32GroupBoardSkinTimestamp != nil {
		return *m.Uint32GroupBoardSkinTimestamp
	}
	return 0
}

func (m *GroupInfo) GetStringGroupAioSkinUrl() []byte {
	if m != nil {
		return m.StringGroupAioSkinUrl
	}
	return nil
}

func (m *GroupInfo) GetStringGroupBoardSkinUrl() []byte {
	if m != nil {
		return m.StringGroupBoardSkinUrl
	}
	return nil
}

func (m *GroupInfo) GetUint32GroupCoverSkinTimestamp() uint32 {
	if m != nil && m.Uint32GroupCoverSkinTimestamp != nil {
		return *m.Uint32GroupCoverSkinTimestamp
	}
	return 0
}

func (m *GroupInfo) GetStringGroupCoverSkinUrl() []byte {
	if m != nil {
		return m.StringGroupCoverSkinUrl
	}
	return nil
}

func (m *GroupInfo) GetUint32GroupGrade() uint32 {
	if m != nil && m.Uint32GroupGrade != nil {
		return *m.Uint32GroupGrade
	}
	return 0
}

func (m *GroupInfo) GetUint32ActiveMemberNum() uint32 {
	if m != nil && m.Uint32ActiveMemberNum != nil {
		return *m.Uint32ActiveMemberNum
	}
	return 0
}

func (m *GroupInfo) GetUint32CertificationType() uint32 {
	if m != nil && m.Uint32CertificationType != nil {
		return *m.Uint32CertificationType
	}
	return 0
}

func (m *GroupInfo) GetStringCertificationText() []byte {
	if m != nil {
		return m.StringCertificationText
	}
	return nil
}

func (m *GroupInfo) GetStringGroupRichFingerMemo() []byte {
	if m != nil {
		return m.StringGroupRichFingerMemo
	}
	return nil
}

func (m *GroupInfo) GetRptTagRecord() []*TagRecord {
	if m != nil {
		return m.RptTagRecord
	}
	return nil
}

func (m *GroupInfo) GetGroupGeoInfo() *GroupGeoInfo {
	if m != nil {
		return m.GroupGeoInfo
	}
	return nil
}

func (m *GroupInfo) GetUint32HeadPortraitSeq() uint32 {
	if m != nil && m.Uint32HeadPortraitSeq != nil {
		return *m.Uint32HeadPortraitSeq
	}
	return 0
}

func (m *GroupInfo) GetMsgHeadPortrait() *GroupHeadPortrait {
	if m != nil {
		return m.MsgHeadPortrait
	}
	return nil
}

func (m *GroupInfo) GetUint32ShutupTimestamp() uint32 {
	if m != nil && m.Uint32ShutupTimestamp != nil {
		return *m.Uint32ShutupTimestamp
	}
	return 0
}

func (m *GroupInfo) GetUint32ShutupTimestampMe() uint32 {
	if m != nil && m.Uint32ShutupTimestampMe != nil {
		return *m.Uint32ShutupTimestampMe
	}
	return 0
}

func (m *GroupInfo) GetUint32CreateSourceFlag() uint32 {
	if m != nil && m.Uint32CreateSourceFlag != nil {
		return *m.Uint32CreateSourceFlag
	}
	return 0
}

func (m *GroupInfo) GetUint32CmduinMsgSeq() uint32 {
	if m != nil && m.Uint32CmduinMsgSeq != nil {
		return *m.Uint32CmduinMsgSeq
	}
	return 0
}

func (m *GroupInfo) GetUint32CmduinJoinTime() uint32 {
	if m != nil && m.Uint32CmduinJoinTime != nil {
		return *m.Uint32CmduinJoinTime
	}
	return 0
}

func (m *GroupInfo) GetUint32CmduinUinFlag() uint32 {
	if m != nil && m.Uint32CmduinUinFlag != nil {
		return *m.Uint32CmduinUinFlag
	}
	return 0
}

func (m *GroupInfo) GetUint32CmduinFlagEx() uint32 {
	if m != nil && m.Uint32CmduinFlagEx != nil {
		return *m.Uint32CmduinFlagEx
	}
	return 0
}

func (m *GroupInfo) GetUint32CmduinNewMobileFlag() uint32 {
	if m != nil && m.Uint32CmduinNewMobileFlag != nil {
		return *m.Uint32CmduinNewMobileFlag
	}
	return 0
}

func (m *GroupInfo) GetUint32CmduinReadMsgSeq() uint32 {
	if m != nil && m.Uint32CmduinReadMsgSeq != nil {
		return *m.Uint32CmduinReadMsgSeq
	}
	return 0
}

func (m *GroupInfo) GetUint32CmduinLastMsgTime() uint32 {
	if m != nil && m.Uint32CmduinLastMsgTime != nil {
		return *m.Uint32CmduinLastMsgTime
	}
	return 0
}

func (m *GroupInfo) GetUint32GroupTypeFlag() uint32 {
	if m != nil && m.Uint32GroupTypeFlag != nil {
		return *m.Uint32GroupTypeFlag
	}
	return 0
}

func (m *GroupInfo) GetUint32AppPrivilegeFlag() uint32 {
	if m != nil && m.Uint32AppPrivilegeFlag != nil {
		return *m.Uint32AppPrivilegeFlag
	}
	return 0
}

func (m *GroupInfo) GetStGroupExInfo() *GroupExInfoOnly {
	if m != nil {
		return m.StGroupExInfo
	}
	return nil
}

func (m *GroupInfo) GetUint32GroupSecLevel() uint32 {
	if m != nil && m.Uint32GroupSecLevel != nil {
		return *m.Uint32GroupSecLevel
	}
	return 0
}

func (m *GroupInfo) GetUint32GroupSecLevelInfo() uint32 {
	if m != nil && m.Uint32GroupSecLevelInfo != nil {
		return *m.Uint32GroupSecLevelInfo
	}
	return 0
}

func (m *GroupInfo) GetUint32CmduinPrivilege() uint32 {
	if m != nil && m.Uint32CmduinPrivilege != nil {
		return *m.Uint32CmduinPrivilege
	}
	return 0
}

func (m *GroupInfo) GetStringPoidInfo() []byte {
	if m != nil {
		return m.StringPoidInfo
	}
	return nil
}

func (m *GroupInfo) GetUint32CmduinFlagEx2() uint32 {
	if m != nil && m.Uint32CmduinFlagEx2 != nil {
		return *m.Uint32CmduinFlagEx2
	}
	return 0
}

func (m *GroupInfo) GetUint64ConfUin() uint64 {
	if m != nil && m.Uint64ConfUin != nil {
		return *m.Uint64ConfUin
	}
	return 0
}

func (m *GroupInfo) GetUint32ConfMaxMsgSeq() uint32 {
	if m != nil && m.Uint32ConfMaxMsgSeq != nil {
		return *m.Uint32ConfMaxMsgSeq
	}
	return 0
}

func (m *GroupInfo) GetUint32ConfToGroupTime() uint32 {
	if m != nil && m.Uint32ConfToGroupTime != nil {
		return *m.Uint32ConfToGroupTime
	}
	return 0
}

func (m *GroupInfo) GetUint32PasswordRedbagTime() uint32 {
	if m != nil && m.Uint32PasswordRedbagTime != nil {
		return *m.Uint32PasswordRedbagTime
	}
	return 0
}

func (m *GroupInfo) GetUint64SubscriptionUin() uint64 {
	if m != nil && m.Uint64SubscriptionUin != nil {
		return *m.Uint64SubscriptionUin
	}
	return 0
}

func (m *GroupInfo) GetUint32MemberListChangeSeq() uint32 {
	if m != nil && m.Uint32MemberListChangeSeq != nil {
		return *m.Uint32MemberListChangeSeq
	}
	return 0
}

func (m *GroupInfo) GetUint32MembercardSeq() uint32 {
	if m != nil && m.Uint32MembercardSeq != nil {
		return *m.Uint32MembercardSeq
	}
	return 0
}

func (m *GroupInfo) GetUint64RootId() uint64 {
	if m != nil && m.Uint64RootId != nil {
		return *m.Uint64RootId
	}
	return 0
}

func (m *GroupInfo) GetUint64ParentId() uint64 {
	if m != nil && m.Uint64ParentId != nil {
		return *m.Uint64ParentId
	}
	return 0
}

func (m *GroupInfo) GetUint32TeamSeq() uint32 {
	if m != nil && m.Uint32TeamSeq != nil {
		return *m.Uint32TeamSeq
	}
	return 0
}

func (m *GroupInfo) GetUint64HistoryMsgBeginTime() uint64 {
	if m != nil && m.Uint64HistoryMsgBeginTime != nil {
		return *m.Uint64HistoryMsgBeginTime
	}
	return 0
}

func (m *GroupInfo) GetUint64InviteNoAuthNumLimit() uint64 {
	if m != nil && m.Uint64InviteNoAuthNumLimit != nil {
		return *m.Uint64InviteNoAuthNumLimit
	}
	return 0
}

func (m *GroupInfo) GetUint32CmduinHistoryMsgSeq() uint32 {
	if m != nil && m.Uint32CmduinHistoryMsgSeq != nil {
		return *m.Uint32CmduinHistoryMsgSeq
	}
	return 0
}

func (m *GroupInfo) GetUint32CmduinJoinMsgSeq() uint32 {
	if m != nil && m.Uint32CmduinJoinMsgSeq != nil {
		return *m.Uint32CmduinJoinMsgSeq
	}
	return 0
}

func (m *GroupInfo) GetUint32GroupFlagext3() uint32 {
	if m != nil && m.Uint32GroupFlagext3 != nil {
		return *m.Uint32GroupFlagext3
	}
	return 0
}

func (m *GroupInfo) GetUint32GroupOpenAppid() uint32 {
	if m != nil && m.Uint32GroupOpenAppid != nil {
		return *m.Uint32GroupOpenAppid
	}
	return 0
}

func (m *GroupInfo) GetUint32IsConfGroup() uint32 {
	if m != nil && m.Uint32IsConfGroup != nil {
		return *m.Uint32IsConfGroup
	}
	return 0
}

func (m *GroupInfo) GetUint32IsModifyConfGroupFace() uint32 {
	if m != nil && m.Uint32IsModifyConfGroupFace != nil {
		return *m.Uint32IsModifyConfGroupFace
	}
	return 0
}

func (m *GroupInfo) GetUint32IsModifyConfGroupName() uint32 {
	if m != nil && m.Uint32IsModifyConfGroupName != nil {
		return *m.Uint32IsModifyConfGroupName
	}
	return 0
}

func (m *GroupInfo) GetUint32NoFingerOpenFlag() uint32 {
	if m != nil && m.Uint32NoFingerOpenFlag != nil {
		return *m.Uint32NoFingerOpenFlag
	}
	return 0
}

func (m *GroupInfo) GetUint32NoCodeFingerOpenFlag() uint32 {
	if m != nil && m.Uint32NoCodeFingerOpenFlag != nil {
		return *m.Uint32NoCodeFingerOpenFlag
	}
	return 0
}

func (m *GroupInfo) GetUint32AutoAgreeJoinGroupUserNumForNormalGroup() uint32 {
	if m != nil && m.Uint32AutoAgreeJoinGroupUserNumForNormalGroup != nil {
		return *m.Uint32AutoAgreeJoinGroupUserNumForNormalGroup
	}
	return 0
}

func (m *GroupInfo) GetUint32AutoAgreeJoinGroupUserNumForConfGroup() uint32 {
	if m != nil && m.Uint32AutoAgreeJoinGroupUserNumForConfGroup != nil {
		return *m.Uint32AutoAgreeJoinGroupUserNumForConfGroup
	}
	return 0
}

func (m *GroupInfo) GetUint32IsAllowConfGroupMemberNick() uint32 {
	if m != nil && m.Uint32IsAllowConfGroupMemberNick != nil {
		return *m.Uint32IsAllowConfGroupMemberNick
	}
	return 0
}

func (m *GroupInfo) GetUint32IsAllowConfGroupMemberAtAll() uint32 {
	if m != nil && m.Uint32IsAllowConfGroupMemberAtAll != nil {
		return *m.Uint32IsAllowConfGroupMemberAtAll
	}
	return 0
}

func (m *GroupInfo) GetUint32IsAllowConfGroupMemberModifyGroupName() uint32 {
	if m != nil && m.Uint32IsAllowConfGroupMemberModifyGroupName != nil {
		return *m.Uint32IsAllowConfGroupMemberModifyGroupName
	}
	return 0
}

func (m *GroupInfo) GetStringLongGroupName() []byte {
	if m != nil {
		return m.StringLongGroupName
	}
	return nil
}

func (m *GroupInfo) GetUint32CmduinJoinRealMsgSeq() uint32 {
	if m != nil && m.Uint32CmduinJoinRealMsgSeq != nil {
		return *m.Uint32CmduinJoinRealMsgSeq
	}
	return 0
}

func (m *GroupInfo) GetUint32IsGroupFreeze() uint32 {
	if m != nil && m.Uint32IsGroupFreeze != nil {
		return *m.Uint32IsGroupFreeze
	}
	return 0
}

func (m *GroupInfo) GetUint32MsgLimitFrequency() uint32 {
	if m != nil && m.Uint32MsgLimitFrequency != nil {
		return *m.Uint32MsgLimitFrequency
	}
	return 0
}

type ReqGroupInfo struct {
	Uint64GroupCode            *uint64    `protobuf:"varint,1,req,name=uint64_group_code,json=uint64GroupCode" json:"uint64_group_code,omitempty"`
	Stgroupinfo                *GroupInfo `protobuf:"bytes,2,req,name=stgroupinfo" json:"stgroupinfo,omitempty"`
	Uint32LastGetGroupNameTime *uint32    `protobuf:"varint,3,opt,name=uint32_last_get_group_name_time,json=uint32LastGetGroupNameTime" json:"uint32_last_get_group_name_time,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}   `json:"-"`
	XXX_unrecognized           []byte     `json:"-"`
	XXX_sizecache              int32      `json:"-"`
}

func (m *ReqGroupInfo) Reset()         { *m = ReqGroupInfo{} }
func (m *ReqGroupInfo) String() string { return proto.CompactTextString(m) }
func (*ReqGroupInfo) ProtoMessage()    {}
func (*ReqGroupInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0114f5596d33f534, []int{4}
}

func (m *ReqGroupInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqGroupInfo.Unmarshal(m, b)
}
func (m *ReqGroupInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqGroupInfo.Marshal(b, m, deterministic)
}
func (m *ReqGroupInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqGroupInfo.Merge(m, src)
}
func (m *ReqGroupInfo) XXX_Size() int {
	return xxx_messageInfo_ReqGroupInfo.Size(m)
}
func (m *ReqGroupInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqGroupInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReqGroupInfo proto.InternalMessageInfo

func (m *ReqGroupInfo) GetUint64GroupCode() uint64 {
	if m != nil && m.Uint64GroupCode != nil {
		return *m.Uint64GroupCode
	}
	return 0
}

func (m *ReqGroupInfo) GetStgroupinfo() *GroupInfo {
	if m != nil {
		return m.Stgroupinfo
	}
	return nil
}

func (m *ReqGroupInfo) GetUint32LastGetGroupNameTime() uint32 {
	if m != nil && m.Uint32LastGetGroupNameTime != nil {
		return *m.Uint32LastGetGroupNameTime
	}
	return 0
}

type ReqBody struct {
	Uint32Appid           *uint32         `protobuf:"varint,1,req,name=uint32_appid,json=uint32Appid" json:"uint32_appid,omitempty"`
	Stzreqgroupinfo       []*ReqGroupInfo `protobuf:"bytes,2,rep,name=stzreqgroupinfo" json:"stzreqgroupinfo,omitempty"`
	Uint32PcClientVersion *uint32         `protobuf:"varint,3,opt,name=uint32_pc_client_version,json=uint32PcClientVersion" json:"uint32_pc_client_version,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}        `json:"-"`
	XXX_unrecognized      []byte          `json:"-"`
	XXX_sizecache         int32           `json:"-"`
}

func (m *ReqBody) Reset()         { *m = ReqBody{} }
func (m *ReqBody) String() string { return proto.CompactTextString(m) }
func (*ReqBody) ProtoMessage()    {}
func (*ReqBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_0114f5596d33f534, []int{5}
}

func (m *ReqBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqBody.Unmarshal(m, b)
}
func (m *ReqBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqBody.Marshal(b, m, deterministic)
}
func (m *ReqBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqBody.Merge(m, src)
}
func (m *ReqBody) XXX_Size() int {
	return xxx_messageInfo_ReqBody.Size(m)
}
func (m *ReqBody) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqBody.DiscardUnknown(m)
}

var xxx_messageInfo_ReqBody proto.InternalMessageInfo

func (m *ReqBody) GetUint32Appid() uint32 {
	if m != nil && m.Uint32Appid != nil {
		return *m.Uint32Appid
	}
	return 0
}

func (m *ReqBody) GetStzreqgroupinfo() []*ReqGroupInfo {
	if m != nil {
		return m.Stzreqgroupinfo
	}
	return nil
}

func (m *ReqBody) GetUint32PcClientVersion() uint32 {
	if m != nil && m.Uint32PcClientVersion != nil {
		return *m.Uint32PcClientVersion
	}
	return 0
}

type RspGroupInfo struct {
	Uint64GroupCode      *uint64    `protobuf:"varint,1,req,name=uint64_group_code,json=uint64GroupCode" json:"uint64_group_code,omitempty"`
	Uint32Result         *uint32    `protobuf:"varint,2,req,name=uint32_result,json=uint32Result" json:"uint32_result,omitempty"`
	Stgroupinfo          *GroupInfo `protobuf:"bytes,3,opt,name=stgroupinfo" json:"stgroupinfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RspGroupInfo) Reset()         { *m = RspGroupInfo{} }
func (m *RspGroupInfo) String() string { return proto.CompactTextString(m) }
func (*RspGroupInfo) ProtoMessage()    {}
func (*RspGroupInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0114f5596d33f534, []int{6}
}

func (m *RspGroupInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspGroupInfo.Unmarshal(m, b)
}
func (m *RspGroupInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspGroupInfo.Marshal(b, m, deterministic)
}
func (m *RspGroupInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspGroupInfo.Merge(m, src)
}
func (m *RspGroupInfo) XXX_Size() int {
	return xxx_messageInfo_RspGroupInfo.Size(m)
}
func (m *RspGroupInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RspGroupInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RspGroupInfo proto.InternalMessageInfo

func (m *RspGroupInfo) GetUint64GroupCode() uint64 {
	if m != nil && m.Uint64GroupCode != nil {
		return *m.Uint64GroupCode
	}
	return 0
}

func (m *RspGroupInfo) GetUint32Result() uint32 {
	if m != nil && m.Uint32Result != nil {
		return *m.Uint32Result
	}
	return 0
}

func (m *RspGroupInfo) GetStgroupinfo() *GroupInfo {
	if m != nil {
		return m.Stgroupinfo
	}
	return nil
}

type RspBody struct {
	Stzrspgroupinfo      []*RspGroupInfo `protobuf:"bytes,1,rep,name=stzrspgroupinfo" json:"stzrspgroupinfo,omitempty"`
	StrErrorinfo         []byte          `protobuf:"bytes,2,opt,name=str_errorinfo,json=strErrorinfo" json:"str_errorinfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RspBody) Reset()         { *m = RspBody{} }
func (m *RspBody) String() string { return proto.CompactTextString(m) }
func (*RspBody) ProtoMessage()    {}
func (*RspBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_0114f5596d33f534, []int{7}
}

func (m *RspBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspBody.Unmarshal(m, b)
}
func (m *RspBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspBody.Marshal(b, m, deterministic)
}
func (m *RspBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspBody.Merge(m, src)
}
func (m *RspBody) XXX_Size() int {
	return xxx_messageInfo_RspBody.Size(m)
}
func (m *RspBody) XXX_DiscardUnknown() {
	xxx_messageInfo_RspBody.DiscardUnknown(m)
}

var xxx_messageInfo_RspBody proto.InternalMessageInfo

func (m *RspBody) GetStzrspgroupinfo() []*RspGroupInfo {
	if m != nil {
		return m.Stzrspgroupinfo
	}
	return nil
}

func (m *RspBody) GetStrErrorinfo() []byte {
	if m != nil {
		return m.StrErrorinfo
	}
	return nil
}

type TagRecord struct {
	Uint64FromUin        *uint64  `protobuf:"varint,1,opt,name=uint64_from_uin,json=uint64FromUin" json:"uint64_from_uin,omitempty"`
	Uint64GroupCode      *uint64  `protobuf:"varint,2,opt,name=uint64_group_code,json=uint64GroupCode" json:"uint64_group_code,omitempty"`
	BytesTagId           []byte   `protobuf:"bytes,3,opt,name=bytes_tag_id,json=bytesTagId" json:"bytes_tag_id,omitempty"`
	Uint64SetTime        *uint64  `protobuf:"varint,4,opt,name=uint64_set_time,json=uint64SetTime" json:"uint64_set_time,omitempty"`
	Uint32GoodNum        *uint32  `protobuf:"varint,5,opt,name=uint32_good_num,json=uint32GoodNum" json:"uint32_good_num,omitempty"`
	Uint32BadNum         *uint32  `protobuf:"varint,6,opt,name=uint32_bad_num,json=uint32BadNum" json:"uint32_bad_num,omitempty"`
	Uint32TagLen         *uint32  `protobuf:"varint,7,opt,name=uint32_tag_len,json=uint32TagLen" json:"uint32_tag_len,omitempty"`
	BytesTagValue        []byte   `protobuf:"bytes,8,opt,name=bytes_tag_value,json=bytesTagValue" json:"bytes_tag_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TagRecord) Reset()         { *m = TagRecord{} }
func (m *TagRecord) String() string { return proto.CompactTextString(m) }
func (*TagRecord) ProtoMessage()    {}
func (*TagRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_0114f5596d33f534, []int{8}
}

func (m *TagRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagRecord.Unmarshal(m, b)
}
func (m *TagRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagRecord.Marshal(b, m, deterministic)
}
func (m *TagRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagRecord.Merge(m, src)
}
func (m *TagRecord) XXX_Size() int {
	return xxx_messageInfo_TagRecord.Size(m)
}
func (m *TagRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_TagRecord.DiscardUnknown(m)
}

var xxx_messageInfo_TagRecord proto.InternalMessageInfo

func (m *TagRecord) GetUint64FromUin() uint64 {
	if m != nil && m.Uint64FromUin != nil {
		return *m.Uint64FromUin
	}
	return 0
}

func (m *TagRecord) GetUint64GroupCode() uint64 {
	if m != nil && m.Uint64GroupCode != nil {
		return *m.Uint64GroupCode
	}
	return 0
}

func (m *TagRecord) GetBytesTagId() []byte {
	if m != nil {
		return m.BytesTagId
	}
	return nil
}

func (m *TagRecord) GetUint64SetTime() uint64 {
	if m != nil && m.Uint64SetTime != nil {
		return *m.Uint64SetTime
	}
	return 0
}

func (m *TagRecord) GetUint32GoodNum() uint32 {
	if m != nil && m.Uint32GoodNum != nil {
		return *m.Uint32GoodNum
	}
	return 0
}

func (m *TagRecord) GetUint32BadNum() uint32 {
	if m != nil && m.Uint32BadNum != nil {
		return *m.Uint32BadNum
	}
	return 0
}

func (m *TagRecord) GetUint32TagLen() uint32 {
	if m != nil && m.Uint32TagLen != nil {
		return *m.Uint32TagLen
	}
	return 0
}

func (m *TagRecord) GetBytesTagValue() []byte {
	if m != nil {
		return m.BytesTagValue
	}
	return nil
}

type GroupGeoInfo struct {
	Uint64Owneruin       *uint64  `protobuf:"varint,1,opt,name=uint64_owneruin,json=uint64Owneruin" json:"uint64_owneruin,omitempty"`
	Uint32Settime        *uint32  `protobuf:"varint,2,opt,name=uint32_settime,json=uint32Settime" json:"uint32_settime,omitempty"`
	Uint32Cityid         *uint32  `protobuf:"varint,3,opt,name=uint32_cityid,json=uint32Cityid" json:"uint32_cityid,omitempty"`
	Int64Longitude       *int64   `protobuf:"varint,4,opt,name=int64_longitude,json=int64Longitude" json:"int64_longitude,omitempty"`
	Int64Latitude        *int64   `protobuf:"varint,5,opt,name=int64_latitude,json=int64Latitude" json:"int64_latitude,omitempty"`
	BytesGeocontent      []byte   `protobuf:"bytes,6,opt,name=bytes_geocontent,json=bytesGeocontent" json:"bytes_geocontent,omitempty"`
	Uint64PoiId          *uint64  `protobuf:"varint,7,opt,name=uint64_poi_id,json=uint64PoiId" json:"uint64_poi_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupGeoInfo) Reset()         { *m = GroupGeoInfo{} }
func (m *GroupGeoInfo) String() string { return proto.CompactTextString(m) }
func (*GroupGeoInfo) ProtoMessage()    {}
func (*GroupGeoInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0114f5596d33f534, []int{9}
}

func (m *GroupGeoInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupGeoInfo.Unmarshal(m, b)
}
func (m *GroupGeoInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupGeoInfo.Marshal(b, m, deterministic)
}
func (m *GroupGeoInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupGeoInfo.Merge(m, src)
}
func (m *GroupGeoInfo) XXX_Size() int {
	return xxx_messageInfo_GroupGeoInfo.Size(m)
}
func (m *GroupGeoInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupGeoInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GroupGeoInfo proto.InternalMessageInfo

func (m *GroupGeoInfo) GetUint64Owneruin() uint64 {
	if m != nil && m.Uint64Owneruin != nil {
		return *m.Uint64Owneruin
	}
	return 0
}

func (m *GroupGeoInfo) GetUint32Settime() uint32 {
	if m != nil && m.Uint32Settime != nil {
		return *m.Uint32Settime
	}
	return 0
}

func (m *GroupGeoInfo) GetUint32Cityid() uint32 {
	if m != nil && m.Uint32Cityid != nil {
		return *m.Uint32Cityid
	}
	return 0
}

func (m *GroupGeoInfo) GetInt64Longitude() int64 {
	if m != nil && m.Int64Longitude != nil {
		return *m.Int64Longitude
	}
	return 0
}

func (m *GroupGeoInfo) GetInt64Latitude() int64 {
	if m != nil && m.Int64Latitude != nil {
		return *m.Int64Latitude
	}
	return 0
}

func (m *GroupGeoInfo) GetBytesGeocontent() []byte {
	if m != nil {
		return m.BytesGeocontent
	}
	return nil
}

func (m *GroupGeoInfo) GetUint64PoiId() uint64 {
	if m != nil && m.Uint64PoiId != nil {
		return *m.Uint64PoiId
	}
	return 0
}

func init() {
	proto.RegisterType((*GroupHeadPortraitInfo)(nil), "oidb_0x88d.GroupHeadPortraitInfo")
	proto.RegisterType((*GroupHeadPortrait)(nil), "oidb_0x88d.GroupHeadPortrait")
	proto.RegisterType((*GroupExInfoOnly)(nil), "oidb_0x88d.GroupExInfoOnly")
	proto.RegisterType((*GroupInfo)(nil), "oidb_0x88d.GroupInfo")
	proto.RegisterType((*ReqGroupInfo)(nil), "oidb_0x88d.ReqGroupInfo")
	proto.RegisterType((*ReqBody)(nil), "oidb_0x88d.ReqBody")
	proto.RegisterType((*RspGroupInfo)(nil), "oidb_0x88d.RspGroupInfo")
	proto.RegisterType((*RspBody)(nil), "oidb_0x88d.RspBody")
	proto.RegisterType((*TagRecord)(nil), "oidb_0x88d.TagRecord")
	proto.RegisterType((*GroupGeoInfo)(nil), "oidb_0x88d.GroupGeoInfo")
}

func init() { proto.RegisterFile("oidb_0x88d.proto", fileDescriptor_0114f5596d33f534) }

var fileDescriptor_0114f5596d33f534 = []byte{
	// 2597 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x59, 0x5b, 0x73, 0xdc, 0xb6,
	0x15, 0x1e, 0x49, 0x4e, 0xdd, 0xc0, 0xab, 0x1b, 0x1d, 0xd9, 0x94, 0x1d, 0x37, 0xf2, 0xe6, 0xa6,
	0xdc, 0x9c, 0x44, 0x56, 0x14, 0xe7, 0xda, 0xac, 0xd6, 0x96, 0xbc, 0xa9, 0x56, 0x56, 0x28, 0xd9,
	0xbd, 0x65, 0x86, 0x03, 0x91, 0x58, 0x0a, 0x35, 0x49, 0x50, 0x00, 0x28, 0x4b, 0xf9, 0x25, 0x7d,
	0xee, 0x5b, 0xff, 0x41, 0x5f, 0xfb, 0xd0, 0x1f, 0xd0, 0x7f, 0xd4, 0x39, 0x07, 0x20, 0x09, 0x2e,
	0x95, 0x38, 0xd3, 0x07, 0xcf, 0x58, 0x38, 0xe7, 0x3b, 0x38, 0x38, 0x37, 0x7e, 0xc0, 0x92, 0x25,
	0xc1, 0xe3, 0xe3, 0xf0, 0x93, 0xf3, 0x07, 0x0f, 0xe2, 0x7b, 0x85, 0x14, 0x5a, 0x78, 0xa4, 0x59,
	0xe9, 0x6f, 0x93, 0x95, 0x5d, 0x29, 0xca, 0xe2, 0x31, 0xa3, 0xf1, 0x81, 0x90, 0x5a, 0x52, 0xae,
	0x47, 0xf9, 0x44, 0x78, 0xef, 0x91, 0x65, 0x59, 0xe8, 0xb0, 0xe4, 0xb9, 0xbe, 0xbf, 0x11, 0x16,
	0x3c, 0x0a, 0x79, 0xec, 0xcf, 0xac, 0xcd, 0xac, 0xcf, 0x07, 0x0b, 0xb2, 0xd0, 0x4f, 0x71, 0xfd,
	0x80, 0x47, 0xa3, 0xb8, 0xff, 0xef, 0x59, 0xb2, 0xdc, 0x31, 0xe2, 0xbd, 0x45, 0x16, 0x1c, 0x70,
	0x94, 0x6b, 0x8b, 0xee, 0x95, 0x15, 0x74, 0x98, 0x6b, 0x6f, 0x48, 0x7a, 0xb0, 0x4d, 0xa6, 0x92,
	0x90, 0xe7, 0x13, 0xe1, 0xcf, 0xae, 0xcd, 0xad, 0x5f, 0xdb, 0xb8, 0x7b, 0xcf, 0x71, 0xfa, 0x52,
	0xff, 0x02, 0x22, 0x0b, 0x3d, 0x56, 0x09, 0xfa, 0xfa, 0x3e, 0x59, 0xb6, 0x5b, 0xc5, 0x6c, 0x42,
	0xcb, 0x54, 0x83, 0xaf, 0x73, 0xb8, 0xdb, 0xa2, 0x11, 0x3c, 0x34, 0xeb, 0xa3, 0xd8, 0xfb, 0x9c,
	0xf8, 0x56, 0xf7, 0x8c, 0x49, 0x3e, 0xb9, 0xe0, 0x79, 0x52, 0x3b, 0x78, 0x05, 0x21, 0x2b, 0x46,
	0xfe, 0xac, 0x12, 0x5b, 0x4f, 0x7f, 0x24, 0xab, 0x95, 0xa7, 0x35, 0x12, 0xc3, 0x02, 0x6e, 0xbf,
	0xf2, 0x6b, 0xdd, 0xbe, 0x61, 0xdc, 0x7e, 0xe6, 0x58, 0x80, 0xf5, 0x7e, 0x49, 0x16, 0x11, 0xf0,
	0xe8, 0x1c, 0xfe, 0x7c, 0x92, 0xa7, 0x17, 0xde, 0x3b, 0xc4, 0x3a, 0x1f, 0x6a, 0xc9, 0x8f, 0x59,
	0x13, 0xff, 0x79, 0xb3, 0x7c, 0x04, 0xab, 0xa3, 0xd8, 0xfb, 0x92, 0xdc, 0xb2, 0x7a, 0x99, 0xc8,
	0xd9, 0x45, 0x38, 0x11, 0x32, 0xa4, 0x71, 0x1c, 0x26, 0x60, 0xcf, 0x9f, 0x45, 0xc8, 0x0d, 0xa3,
	0x31, 0x06, 0x85, 0x1d, 0x21, 0x07, 0x71, 0x8c, 0xbb, 0xf5, 0xff, 0xfb, 0x3e, 0x79, 0x15, 0xff,
	0x87, 0x71, 0xfc, 0x90, 0x78, 0xa0, 0xb7, 0xb5, 0x69, 0xb0, 0xa1, 0x78, 0x91, 0x33, 0x89, 0x9b,
	0x5e, 0x09, 0x96, 0x8c, 0x04, 0x95, 0x9f, 0xc0, 0xba, 0x13, 0x49, 0xa3, 0x1d, 0x49, 0x46, 0x35,
	0x0b, 0x35, 0xcf, 0x98, 0xdd, 0xd5, 0x46, 0x12, 0x31, 0x43, 0x94, 0x1e, 0xf1, 0x8c, 0x39, 0xe9,
	0x32, 0xc0, 0x49, 0x4a, 0x93, 0x76, 0xba, 0x10, 0xb1, 0x93, 0xd2, 0xc4, 0xfb, 0x94, 0xac, 0x74,
	0x74, 0x43, 0x76, 0x5e, 0xe5, 0xca, 0x9b, 0xd2, 0x7f, 0x74, 0xae, 0xbd, 0xaf, 0xc9, 0xed, 0x16,
	0x24, 0x63, 0xd9, 0x31, 0x93, 0x61, 0x46, 0xcf, 0xc3, 0xbc, 0xcc, 0xfc, 0x57, 0x10, 0x78, 0xd3,
	0x01, 0x8e, 0x51, 0x61, 0x4c, 0xcf, 0xf7, 0xcb, 0xcc, 0xfb, 0x8c, 0xdc, 0xbc, 0x0c, 0x0d, 0xc8,
	0xdf, 0x20, 0xf2, 0xb5, 0x0e, 0x12, 0x60, 0xf7, 0xc8, 0xf5, 0x16, 0x4c, 0x14, 0x9a, 0x8b, 0xdc,
	0xbf, 0x8a, 0x90, 0x65, 0x07, 0xf2, 0x04, 0x05, 0xde, 0x7d, 0x72, 0xa3, 0x1d, 0xbc, 0x94, 0x2a,
	0x85, 0x07, 0xfb, 0x2d, 0x42, 0xae, 0xbb, 0xa1, 0x03, 0x19, 0x9c, 0xec, 0xab, 0x3a, 0xd3, 0x06,
	0xa4, 0x0a, 0x16, 0x71, 0x9a, 0x1a, 0xb0, 0xff, 0x6a, 0xe7, 0x60, 0x87, 0x46, 0x8e, 0xf8, 0x2a,
	0xb9, 0x35, 0x38, 0x65, 0x67, 0x2c, 0xf5, 0x09, 0x82, 0x96, 0x1c, 0xd0, 0x1e, 0xac, 0x77, 0x73,
	0x44, 0x23, 0xe6, 0x5f, 0xeb, 0xe6, 0x88, 0x46, 0xcc, 0xfb, 0x82, 0xac, 0xb6, 0x74, 0xab, 0x26,
	0x2c, 0x68, 0xc2, 0xfc, 0x9e, 0x5b, 0x7f, 0x88, 0xb1, 0xbd, 0x78, 0x40, 0x13, 0xd6, 0x49, 0x2f,
	0x34, 0x53, 0xa8, 0xd8, 0xa9, 0x3f, 0xdf, 0x49, 0x2f, 0x54, 0xe8, 0x21, 0x3b, 0xed, 0xec, 0x26,
	0x05, 0xcd, 0xa0, 0x89, 0xb1, 0xee, 0x16, 0x3a, 0xbb, 0x05, 0x46, 0x5c, 0x15, 0x9e, 0xd2, 0x12,
	0x94, 0x0d, 0x34, 0xa7, 0x19, 0xf3, 0x17, 0xd7, 0x66, 0xd6, 0x7b, 0xc1, 0xa2, 0x11, 0x20, 0x64,
	0x9f, 0x5e, 0xa2, 0x9b, 0xb1, 0x4c, 0xf8, 0x4b, 0x1d, 0xdd, 0x31, 0xcb, 0x04, 0x74, 0x42, 0x4b,
	0x77, 0xc2, 0xf3, 0x04, 0x2a, 0x0e, 0x20, 0xcb, 0x08, 0x59, 0x71, 0x20, 0x3b, 0x28, 0x45, 0xe0,
	0x67, 0xe4, 0x66, 0x0b, 0x68, 0xaa, 0x40, 0x43, 0x19, 0x78, 0x88, 0x7b, 0xcd, 0xc1, 0x61, 0x1a,
	0x8f, 0xd8, 0x25, 0x75, 0x40, 0xd3, 0x94, 0xd3, 0x3c, 0x62, 0x61, 0x24, 0x62, 0xe6, 0x5f, 0x5f,
	0x9b, 0x9b, 0xaa, 0x83, 0x81, 0x95, 0x0f, 0x45, 0xcc, 0x9c, 0x71, 0x61, 0xc0, 0xec, 0x5c, 0x4b,
	0x1a, 0xd2, 0x38, 0xc3, 0x1a, 0x7f, 0xad, 0x13, 0xc0, 0x47, 0x20, 0x1f, 0xc4, 0x19, 0x54, 0xf9,
	0x3a, 0x59, 0x6a, 0x0d, 0x88, 0x92, 0xe7, 0xfe, 0x0a, 0x8e, 0x87, 0x05, 0x67, 0x3c, 0x3c, 0xe5,
	0xb9, 0xb7, 0x35, 0x3d, 0x1c, 0x4a, 0x89, 0xa3, 0x13, 0x72, 0x7b, 0xa3, 0xd3, 0x47, 0xc3, 0x52,
	0x8e, 0x55, 0x02, 0xd9, 0x9d, 0xf6, 0x2e, 0xa5, 0xca, 0xcc, 0x5c, 0x4c, 0xef, 0xcd, 0x8e, 0x77,
	0x7b, 0x54, 0xc1, 0x3c, 0xc5, 0xf4, 0x6e, 0x90, 0x95, 0x56, 0x34, 0x4f, 0x4b, 0xa6, 0xb0, 0x0b,
	0x7d, 0x8c, 0xe5, 0x75, 0x27, 0x96, 0x3f, 0x58, 0x11, 0xf4, 0x6d, 0x0b, 0x43, 0x73, 0xf5, 0x82,
	0x49, 0x7f, 0x15, 0x11, 0xcb, 0x0e, 0x62, 0x80, 0x02, 0xef, 0x5b, 0xf2, 0x7a, 0xcb, 0xbf, 0x33,
	0xae, 0xb8, 0x16, 0xcd, 0x74, 0xb9, 0x85, 0x1e, 0xfa, 0x8e, 0x87, 0xcf, 0x8c, 0x86, 0x1d, 0x2f,
	0x3f, 0x87, 0x87, 0xf8, 0x00, 0xfe, 0xf6, 0xcf, 0xe1, 0x87, 0x25, 0xce, 0x99, 0xa6, 0x61, 0xb0,
	0x7f, 0xb1, 0x84, 0x31, 0xa8, 0xaf, 0xbb, 0x0d, 0x83, 0x3d, 0x0c, 0x65, 0x7c, 0x59, 0x48, 0x69,
	0x9c, 0xf1, 0xbc, 0x76, 0xf8, 0x4e, 0x27, 0xa4, 0x03, 0x90, 0x5b, 0x77, 0x1f, 0x92, 0x37, 0xda,
	0x58, 0x2e, 0x42, 0xf5, 0x9c, 0xe7, 0x98, 0x0e, 0xa5, 0x69, 0x56, 0xf8, 0xbf, 0x43, 0x03, 0xb7,
	0x5d, 0x03, 0x5c, 0x1c, 0x3e, 0xe7, 0xf9, 0x51, 0xa5, 0xe2, 0x3d, 0x26, 0x77, 0x5b, 0x56, 0x8e,
	0x05, 0x95, 0xf1, 0xb4, 0x9d, 0x37, 0xd0, 0xce, 0x1d, 0xc7, 0xce, 0x36, 0xa8, 0xb5, 0x2d, 0x3d,
	0x20, 0xab, 0xed, 0x74, 0x55, 0xfe, 0x94, 0x32, 0xf5, 0xd7, 0x3a, 0xad, 0x66, 0x3d, 0x79, 0x2a,
	0x53, 0xf8, 0x2a, 0xb4, 0x90, 0x8e, 0x0f, 0x80, 0xbd, 0x8b, 0xd8, 0x9b, 0x0e, 0xb6, 0xde, 0x1d,
	0xd0, 0xd3, 0x27, 0x88, 0xc4, 0x19, 0x93, 0xd3, 0x27, 0xe8, 0x77, 0x4e, 0x30, 0x04, 0xb5, 0xf6,
	0x09, 0xa6, 0xfd, 0x70, 0x2c, 0x81, 0x1f, 0x6f, 0x76, 0xfc, 0xa8, 0x6d, 0x80, 0x1f, 0xd3, 0x43,
	0x3c, 0x91, 0x34, 0x66, 0xfe, 0x5b, 0x9d, 0x21, 0xbe, 0x0b, 0xeb, 0xce, 0x17, 0x9a, 0x46, 0x9a,
	0x9f, 0x31, 0xf7, 0x63, 0xf6, 0xb6, 0xfb, 0x85, 0x1e, 0xa0, 0xb8, 0xf9, 0x9a, 0x7d, 0x59, 0xcf,
	0xd8, 0x88, 0x49, 0xcd, 0x27, 0x3c, 0xa2, 0xd0, 0x2d, 0xa1, 0xbe, 0x28, 0x98, 0xff, 0x8e, 0xfb,
	0x9d, 0x19, 0xba, 0xf2, 0xa3, 0x8b, 0x02, 0xe6, 0x4b, 0x95, 0xa2, 0x29, 0x2c, 0x4c, 0xb5, 0x77,
	0xdd, 0xe3, 0xb5, 0xb1, 0x30, 0xd8, 0xbe, 0x23, 0x77, 0x5a, 0xc1, 0x91, 0x3c, 0x3a, 0x69, 0x4d,
	0xd3, 0x75, 0xc4, 0xaf, 0x3a, 0xe1, 0x09, 0x78, 0x74, 0xe2, 0x4c, 0xd4, 0xaf, 0x08, 0xb0, 0xd3,
	0x50, 0xd3, 0x24, 0x94, 0x2c, 0x12, 0x32, 0xf6, 0xdf, 0x43, 0x6a, 0xb6, 0xe2, 0x52, 0xb3, 0x23,
	0x9a, 0x04, 0x28, 0x0c, 0x80, 0x7c, 0xd6, 0x7f, 0x79, 0xdf, 0x92, 0x05, 0x1b, 0x56, 0x26, 0x0c,
	0xaf, 0x7b, 0x7f, 0x6d, 0x66, 0xfd, 0xda, 0x86, 0xdf, 0xe1, 0x75, 0xbb, 0x4c, 0x20, 0x9d, 0xeb,
	0x25, 0xce, 0x5f, 0x4e, 0xbc, 0x4f, 0x18, 0x8d, 0xc3, 0xc2, 0x12, 0x3f, 0xec, 0xcf, 0x0f, 0xdc,
	0x78, 0xbb, 0xb4, 0x10, 0x5a, 0x74, 0x44, 0x96, 0x61, 0xc6, 0xb5, 0x50, 0xfe, 0x87, 0xb8, 0xf7,
	0x9d, 0x5f, 0xe4, 0x94, 0xc1, 0x62, 0xa6, 0x92, 0x16, 0xed, 0xde, 0xaa, 0xf9, 0x8b, 0x3a, 0x29,
	0x75, 0x59, 0x38, 0xf5, 0xf9, 0x91, 0xeb, 0xc2, 0x21, 0x4a, 0x9b, 0xba, 0x6c, 0xbe, 0x29, 0xd3,
	0xb8, 0x30, 0x63, 0xfe, 0x3d, 0x37, 0xe7, 0x53, 0xd0, 0xb1, 0xcb, 0x00, 0x2c, 0x09, 0x54, 0xa2,
	0x94, 0x11, 0x33, 0xcc, 0xee, 0x63, 0x77, 0xc2, 0x18, 0x1a, 0x78, 0x88, 0xe2, 0x29, 0x82, 0x17,
	0x65, 0x71, 0x09, 0x83, 0xc9, 0x7e, 0x25, 0x3e, 0x71, 0x07, 0xda, 0x10, 0x65, 0xf6, 0x1b, 0xd1,
	0x50, 0x34, 0x0b, 0xf9, 0x9b, 0xb0, 0x7d, 0xe8, 0x7f, 0xea, 0x7e, 0x5a, 0x0c, 0xe8, 0x7b, 0x61,
	0xda, 0xcf, 0xa1, 0x5c, 0x16, 0x06, 0xff, 0xd0, 0xc3, 0x0d, 0x97, 0x72, 0x19, 0xd4, 0x53, 0x9e,
	0x5f, 0xee, 0x9e, 0x25, 0xa0, 0xfe, 0xfd, 0xae, 0x7b, 0x86, 0x80, 0x42, 0x11, 0xb7, 0x21, 0x39,
	0x7b, 0x11, 0x66, 0xe2, 0x98, 0xa7, 0x36, 0x20, 0x9b, 0x08, 0x5d, 0x75, 0xa1, 0xfb, 0xec, 0xc5,
	0x18, 0x35, 0x70, 0xd3, 0x66, 0x62, 0x5b, 0x0b, 0x12, 0x0a, 0xa3, 0x0a, 0xcc, 0x67, 0xad, 0x78,
	0xa2, 0x42, 0xc0, 0x68, 0x6c, 0x83, 0xd3, 0xb0, 0x5f, 0x8b, 0x6d, 0x7f, 0x41, 0xb7, 0x5a, 0xcd,
	0x8b, 0x1a, 0xee, 0x27, 0x74, 0x9a, 0x96, 0x42, 0xc3, 0x1b, 0xa7, 0x3f, 0xef, 0xd0, 0x52, 0xe8,
	0x76, 0x74, 0xb7, 0xc9, 0x3e, 0x2d, 0x8a, 0xb0, 0x90, 0xfc, 0x8c, 0xa7, 0x2c, 0xb1, 0xb8, 0x07,
	0xae, 0xb7, 0x83, 0xa2, 0x38, 0xa8, 0xc4, 0x08, 0x7d, 0x48, 0x96, 0x94, 0xae, 0x89, 0x88, 0xe9,
	0xb9, 0x2f, 0xb0, 0xee, 0x6f, 0x77, 0xea, 0xbe, 0xb9, 0x1a, 0x05, 0xf3, 0x4a, 0x3b, 0x4b, 0x1d,
	0xaf, 0x15, 0x8b, 0x2c, 0xbd, 0xfd, 0xb2, 0xe3, 0xf5, 0x21, 0x8b, 0x0c, 0xc3, 0x9d, 0xbe, 0x26,
	0xd4, 0x20, 0xe3, 0xc5, 0x57, 0x5d, 0x36, 0x6d, 0x91, 0xb8, 0xe5, 0xd6, 0x74, 0x0d, 0xd6, 0xc7,
	0xf6, 0xbf, 0x76, 0xdb, 0xcc, 0x84, 0xb8, 0x3e, 0x34, 0x30, 0x28, 0x3b, 0xe1, 0x0a, 0xc1, 0x63,
	0xb3, 0xd5, 0x37, 0x38, 0xd4, 0x16, 0xcc, 0xfa, 0x81, 0xe0, 0xf1, 0xd4, 0xa1, 0xda, 0x95, 0xb7,
	0xe1, 0x7f, 0xdb, 0x2d, 0x57, 0x53, 0x7a, 0x1b, 0xd5, 0x9d, 0x71, 0x6b, 0x33, 0x8c, 0x44, 0x3e,
	0x41, 0x7e, 0xf6, 0x7b, 0xe4, 0x67, 0xf3, 0x66, 0x79, 0x28, 0xf2, 0x09, 0xd0, 0xb3, 0xcd, 0xc6,
	0x7d, 0xd0, 0x03, 0x32, 0x50, 0x95, 0xd7, 0x77, 0x2d, 0xeb, 0x22, 0x9f, 0x8c, 0xe9, 0xb9, 0xad,
	0xad, 0x07, 0x4d, 0x9b, 0x03, 0x4a, 0x8b, 0xaa, 0x4a, 0xa0, 0xb2, 0x06, 0xad, 0x63, 0x8b, 0x7c,
	0x72, 0x24, 0x4c, 0x99, 0x40, 0x5d, 0x7d, 0x53, 0x07, 0xbb, 0xa0, 0x4a, 0xbd, 0x10, 0x32, 0x0e,
	0x25, 0x8b, 0x8f, 0xa9, 0xad, 0xca, 0x6d, 0x97, 0xf5, 0x1c, 0x58, 0x8d, 0x00, 0x15, 0x10, 0x6e,
	0xa3, 0xbd, 0xb5, 0x19, 0xaa, 0xf2, 0x58, 0x45, 0x92, 0xe3, 0x25, 0x0a, 0x8f, 0x37, 0xc4, 0xe3,
	0xad, 0x18, 0xf1, 0xa1, 0x23, 0x85, 0x63, 0x36, 0xad, 0x68, 0xbf, 0x7c, 0x29, 0x57, 0x3a, 0x8c,
	0x4e, 0x68, 0x9e, 0x18, 0xd6, 0xf4, 0xd0, 0x6d, 0x45, 0xf3, 0xfd, 0xdb, 0xe3, 0x4a, 0x0f, 0x51,
	0x03, 0x8e, 0xbc, 0x51, 0xf7, 0xbf, 0xb1, 0x10, 0x21, 0x6b, 0x60, 0xa7, 0xfe, 0x23, 0x37, 0x4c,
	0xe3, 0x5a, 0x06, 0x18, 0xfb, 0xf2, 0xb1, 0xb5, 0x19, 0x4a, 0x21, 0xf0, 0x2d, 0x62, 0x07, 0x9d,
	0xec, 0x99, 0xd5, 0x40, 0x08, 0x3d, 0x8a, 0x1d, 0x2e, 0x5d, 0x50, 0xc9, 0x72, 0xd4, 0xdb, 0x75,
	0xb9, 0xf4, 0x01, 0x2e, 0x8f, 0x62, 0xf7, 0x21, 0x80, 0xd1, 0x0c, 0x77, 0x7f, 0xdc, 0x7a, 0x08,
	0x60, 0x34, 0x83, 0x7d, 0xed, 0x69, 0xb7, 0x36, 0xc3, 0x13, 0xae, 0xb4, 0x90, 0x17, 0x98, 0xd3,
	0x63, 0x96, 0x54, 0xd3, 0x71, 0x84, 0xe6, 0x57, 0x8d, 0xd2, 0x63, 0xa3, 0x33, 0x56, 0xc9, 0x36,
	0x68, 0x60, 0x9c, 0x87, 0x86, 0xee, 0x6d, 0x6d, 0x86, 0x3c, 0x3f, 0xe3, 0x9a, 0x85, 0xb9, 0x08,
	0x69, 0xa9, 0x4f, 0x80, 0x31, 0x84, 0x29, 0xcf, 0xb8, 0xf6, 0xbf, 0x47, 0x1b, 0xb7, 0x8c, 0xda,
	0x08, 0xb5, 0xf6, 0xc5, 0xa0, 0xd4, 0x27, 0xfb, 0x65, 0xb6, 0x07, 0x1a, 0xdd, 0xf9, 0xe7, 0x7a,
	0x03, 0xce, 0xff, 0xa1, 0x3b, 0xff, 0x1a, 0x67, 0xda, 0x8c, 0xd5, 0x1d, 0xf0, 0x15, 0x7c, 0xaf,
	0x3b, 0xff, 0x60, 0xc6, 0x5b, 0xec, 0xc6, 0x25, 0x0f, 0x06, 0xec, 0x5c, 0xdf, 0xf7, 0xc7, 0x9d,
	0x51, 0xb0, 0x63, 0x45, 0x9d, 0x3b, 0xbf, 0x28, 0x58, 0x0e, 0xb3, 0x8c, 0xc7, 0xfe, 0x7e, 0xe7,
	0xae, 0xf2, 0xa4, 0x60, 0xf9, 0x00, 0x64, 0xde, 0xc7, 0xc4, 0xae, 0x87, 0x5c, 0x99, 0x8e, 0x30,
	0x4f, 0x2e, 0x4f, 0xdc, 0x4b, 0xff, 0x48, 0x41, 0x2f, 0x20, 0xd2, 0x7b, 0x44, 0xd6, 0x1a, 0x40,
	0x26, 0x62, 0x3e, 0xb9, 0x70, 0x70, 0xe6, 0x8e, 0x7d, 0xe0, 0xd2, 0xe9, 0x91, 0x1a, 0xa3, 0x56,
	0x6d, 0x02, 0xef, 0xdb, 0x2f, 0x31, 0x83, 0xb7, 0xda, 0x1f, 0x7e, 0xd1, 0x0c, 0xde, 0x70, 0x9b,
	0x28, 0xe7, 0xa2, 0x22, 0x59, 0x78, 0x72, 0x9c, 0xdb, 0x81, 0x1b, 0xe5, 0x7d, 0x61, 0x28, 0x16,
	0x9c, 0x1d, 0xe7, 0xf6, 0xb0, 0xbe, 0x17, 0xe4, 0x02, 0x6f, 0x9d, 0x5d, 0x03, 0x87, 0x68, 0xe0,
	0x56, 0x65, 0x00, 0xee, 0x9e, 0x53, 0x46, 0x32, 0xb2, 0x55, 0x7d, 0x37, 0x4a, 0x2d, 0x42, 0x9a,
	0x48, 0xc6, 0x4c, 0xaa, 0xed, 0xed, 0x52, 0x19, 0xae, 0x8a, 0x2f, 0x5a, 0xb9, 0x90, 0x19, 0x4d,
	0x6d, 0x84, 0x8f, 0xd0, 0xf6, 0x47, 0xf6, 0xa3, 0x52, 0x6a, 0x31, 0x00, 0x2c, 0x54, 0x81, 0xb9,
	0x80, 0x2a, 0xa4, 0xb1, 0x3b, 0x42, 0xee, 0x23, 0xca, 0x44, 0x9f, 0x93, 0xcd, 0x5f, 0xbf, 0x9d,
	0x93, 0xce, 0xa7, 0xb8, 0xd9, 0x07, 0x2f, 0xdf, 0xac, 0x49, 0xf4, 0x01, 0x79, 0xa7, 0xc9, 0x10,
	0x4d, 0x53, 0xf1, 0xc2, 0x4d, 0x50, 0xc5, 0xc2, 0x79, 0xf4, 0xdc, 0x7f, 0x86, 0xc6, 0xd7, 0xaa,
	0x3c, 0x0d, 0x40, 0xb7, 0xb6, 0x63, 0x09, 0x39, 0x8f, 0x9e, 0x7b, 0x87, 0x64, 0xfd, 0xe5, 0x16,
	0xa9, 0x06, 0x91, 0xff, 0x47, 0xb4, 0x79, 0xf7, 0x97, 0x6c, 0x0e, 0xf4, 0x20, 0x4d, 0xbd, 0x13,
	0x72, 0xff, 0xe5, 0x46, 0x6d, 0x81, 0x39, 0xb5, 0xf5, 0x27, 0x37, 0x20, 0x97, 0xdb, 0x37, 0xf5,
	0xd6, 0xd4, 0xda, 0x7d, 0x72, 0xc3, 0x7e, 0xf6, 0x52, 0xd1, 0x7e, 0x7e, 0xf9, 0xb3, 0x7b, 0x37,
	0xdf, 0x13, 0xee, 0x13, 0x4c, 0x53, 0x64, 0xee, 0x18, 0x90, 0x8c, 0xa6, 0xf5, 0x2c, 0xf8, 0x8b,
	0x5b, 0x64, 0xcd, 0x2c, 0x08, 0x18, 0x4d, 0xed, 0x3c, 0x68, 0x3e, 0xa3, 0x5c, 0x55, 0x7d, 0x26,
	0x19, 0xfb, 0x89, 0xf9, 0x7f, 0x75, 0x07, 0xc2, 0x48, 0x99, 0xfe, 0x42, 0x91, 0x43, 0x86, 0x61,
	0x23, 0x1c, 0x7c, 0x80, 0x3a, 0x2d, 0x59, 0x1e, 0x5d, 0xf8, 0x3f, 0xba, 0xd4, 0x60, 0xac, 0x12,
	0x1c, 0x7b, 0x3b, 0x95, 0xb8, 0xff, 0xaf, 0x19, 0xd2, 0x0b, 0xd8, 0x69, 0xf3, 0xac, 0x6a, 0xdf,
	0xd2, 0xea, 0x57, 0x13, 0x7c, 0xa5, 0x99, 0x59, 0x9b, 0x5d, 0xbf, 0x12, 0x2c, 0x3a, 0xcf, 0x26,
	0xf8, 0x3a, 0xf3, 0x39, 0xb9, 0xa6, 0x34, 0xaa, 0xd9, 0xe7, 0xf0, 0xd9, 0xe9, 0xcb, 0x4b, 0x6d,
	0x37, 0x70, 0x35, 0x9d, 0x60, 0x21, 0xe1, 0x4b, 0x98, 0x76, 0xa2, 0x6c, 0xc6, 0xff, 0x9c, 0x1b,
	0x2c, 0x60, 0x7d, 0xbb, 0x4c, 0xd7, 0xd1, 0x86, 0xf9, 0xdf, 0xff, 0xe7, 0x0c, 0xb9, 0x1a, 0xb0,
	0xd3, 0x6d, 0x11, 0x5f, 0x78, 0x77, 0x49, 0xaf, 0x61, 0x75, 0xf8, 0xf6, 0x3c, 0xbb, 0x3e, 0x1f,
	0x5c, 0xab, 0x89, 0x1c, 0x8f, 0xbd, 0x6d, 0xb2, 0xa8, 0xf4, 0x4f, 0x92, 0x9d, 0xba, 0x0e, 0xcf,
	0x4d, 0x5f, 0x98, 0xdc, 0x58, 0x04, 0xd3, 0x00, 0xe7, 0xce, 0x54, 0x44, 0x61, 0x94, 0x72, 0xf8,
	0x12, 0x9e, 0x31, 0xa9, 0xb8, 0xc8, 0xad, 0xc3, 0x76, 0x9e, 0x1f, 0x44, 0x43, 0x94, 0x3e, 0x33,
	0xc2, 0xfe, 0xdf, 0x21, 0xcc, 0xaa, 0xf8, 0xff, 0xc2, 0xfc, 0x26, 0xb1, 0xdf, 0xce, 0x50, 0x32,
	0x55, 0xa6, 0x1a, 0x03, 0x5d, 0xff, 0x36, 0x11, 0xe0, 0xda, 0x74, 0x2e, 0xe6, 0x90, 0x97, 0xfe,
	0x8a, 0x5c, 0xf4, 0x25, 0xb9, 0x1a, 0xa8, 0x02, 0xa3, 0x68, 0x43, 0xa4, 0x8a, 0xc6, 0xce, 0xcc,
	0x25, 0x21, 0x72, 0xce, 0x11, 0x4c, 0x03, 0xc0, 0x59, 0xa5, 0x65, 0xc8, 0xa4, 0x14, 0xd2, 0x06,
	0x19, 0x7a, 0xa6, 0xa7, 0xb4, 0x7c, 0x54, 0xad, 0xf5, 0xff, 0x33, 0x4b, 0x5e, 0x6d, 0x6e, 0xb2,
	0x0d, 0x0f, 0x9c, 0x48, 0x91, 0x21, 0x51, 0x9a, 0x71, 0x79, 0xe0, 0x8e, 0x14, 0x19, 0x10, 0xa4,
	0x4b, 0x63, 0x36, 0x8b, 0x9a, 0x9d, 0x98, 0xad, 0x91, 0xde, 0xf1, 0x85, 0x66, 0x0a, 0x2f, 0xd7,
	0xf6, 0x07, 0x96, 0x5e, 0x40, 0x70, 0xed, 0x88, 0x26, 0x23, 0x77, 0x57, 0xc5, 0xb4, 0xa9, 0xb9,
	0x2b, 0xee, 0xae, 0x87, 0x4c, 0x23, 0xcd, 0x68, 0x08, 0x4d, 0x22, 0x44, 0xec, 0xbc, 0xca, 0xdb,
	0xa4, 0xec, 0x0a, 0x11, 0xef, 0x97, 0x99, 0xf3, 0x13, 0xd2, 0x31, 0x8d, 0x9d, 0x27, 0x78, 0x9b,
	0xa6, 0x6d, 0x3a, 0xa5, 0x05, 0x8e, 0xa5, 0xac, 0x7a, 0x75, 0xb7, 0x5a, 0x47, 0x34, 0xd9, 0x63,
	0x39, 0xec, 0xd9, 0x78, 0x7f, 0x46, 0xd3, 0x92, 0xe1, 0x4b, 0x7b, 0x2f, 0x98, 0xaf, 0x0e, 0xf0,
	0x0c, 0x16, 0xfb, 0xff, 0x98, 0x25, 0x3d, 0xf7, 0x8a, 0xef, 0xbd, 0x5b, 0x1f, 0x0a, 0x7f, 0x0e,
	0x69, 0x42, 0x69, 0x69, 0xda, 0x13, 0xbb, 0xea, 0xbd, 0x5d, 0xfb, 0xa1, 0x98, 0x76, 0x7e, 0x05,
	0xb1, 0x87, 0x3a, 0x34, 0x8b, 0x4e, 0xe9, 0x45, 0x5c, 0x5f, 0xd4, 0x3f, 0x54, 0x59, 0x6f, 0x87,
	0xb8, 0x06, 0x9b, 0x9a, 0x3d, 0x61, 0x5c, 0x72, 0x5d, 0xc6, 0x26, 0x92, 0x73, 0xc1, 0x02, 0x2e,
	0xef, 0x55, 0xab, 0xb0, 0xa9, 0x55, 0xa4, 0xda, 0xe8, 0xbd, 0x82, 0x7a, 0xf3, 0x46, 0xcf, 0x2e,
	0x7a, 0xef, 0x91, 0x25, 0x73, 0xfa, 0x84, 0x89, 0x48, 0xe4, 0x9a, 0xe5, 0x1a, 0x63, 0xd9, 0x0b,
	0x4c, 0x54, 0x76, 0xeb, 0x65, 0xaf, 0x4f, 0xe6, 0x2b, 0x5e, 0x2a, 0x38, 0xe4, 0xf9, 0x2a, 0x9e,
	0xf6, 0x9a, 0x25, 0xa5, 0x82, 0x8f, 0xe2, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0x0e, 0x57, 0xed,
	0x6f, 0x54, 0x1c, 0x00, 0x00,
}
