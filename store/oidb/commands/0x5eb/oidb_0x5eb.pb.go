// Code generated by protoc-gen-go. DO NOT EDIT.
// source: oidb_0x5eb.proto

package oidb_0x5eb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReqBody struct {
	RptUint64Uins        []uint64 `protobuf:"varint,1,rep,name=rpt_uint64_uins,json=rptUint64Uins" json:"rpt_uint64_uins,omitempty"`
	Uint32MaxPackageSize *uint32  `protobuf:"varint,3,opt,name=uint32_max_package_size,json=uint32MaxPackageSize" json:"uint32_max_package_size,omitempty"`
	RptBytesOpenid       [][]byte `protobuf:"bytes,4,rep,name=rpt_bytes_openid,json=rptBytesOpenid" json:"rpt_bytes_openid,omitempty"`
	Uint32Appid          *uint32  `protobuf:"varint,5,opt,name=uint32_appid,json=uint32Appid" json:"uint32_appid,omitempty"`
	Uint32ReqNick        *uint32  `protobuf:"varint,20002,opt,name=uint32_req_nick,json=uint32ReqNick" json:"uint32_req_nick,omitempty"`
	Uint32ReqCountry     *uint32  `protobuf:"varint,20003,opt,name=uint32_req_country,json=uint32ReqCountry" json:"uint32_req_country,omitempty"`
	Uint32ReqProvince    *uint32  `protobuf:"varint,20004,opt,name=uint32_req_province,json=uint32ReqProvince" json:"uint32_req_province,omitempty"`
	Uint32ReqGender      *uint32  `protobuf:"varint,20009,opt,name=uint32_req_gender,json=uint32ReqGender" json:"uint32_req_gender,omitempty"`
	Uint32ReqAllow       *uint32  `protobuf:"varint,20014,opt,name=uint32_req_allow,json=uint32ReqAllow" json:"uint32_req_allow,omitempty"`
	Uint32ReqFaceId      *uint32  `protobuf:"varint,20015,opt,name=uint32_req_face_id,json=uint32ReqFaceId" json:"uint32_req_face_id,omitempty"`
	Uint32ReqPerson      *uint32  `protobuf:"varint,20019,opt,name=uint32_req_person,json=uint32ReqPerson" json:"uint32_req_person,omitempty"`
	Uint32ReqCity        *uint32  `protobuf:"varint,20020,opt,name=uint32_req_city,json=uint32ReqCity" json:"uint32_req_city,omitempty"`
	Uint32ReqBirthday    *uint32  `protobuf:"varint,20031,opt,name=uint32_req_birthday,json=uint32ReqBirthday" json:"uint32_req_birthday,omitempty"`
	Uint32ReqCityId      *uint32  `protobuf:"varint,20032,opt,name=uint32_req_city_id,json=uint32ReqCityId" json:"uint32_req_city_id,omitempty"`
	Uint32ReqLang1       *uint32  `protobuf:"varint,20033,opt,name=uint32_req_lang1,json=uint32ReqLang1" json:"uint32_req_lang1,omitempty"`
	Uint32ReqLang2       *uint32  `protobuf:"varint,20034,opt,name=uint32_req_lang2,json=uint32ReqLang2" json:"uint32_req_lang2,omitempty"`
	Uint32ReqLang3       *uint32  `protobuf:"varint,20035,opt,name=uint32_req_lang3,json=uint32ReqLang3" json:"uint32_req_lang3,omitempty"`
	Uint32ReqLflag       *uint32  `protobuf:"varint,21003,opt,name=uint32_req_lflag,json=uint32ReqLflag" json:"uint32_req_lflag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqBody) Reset()         { *m = ReqBody{} }
func (m *ReqBody) String() string { return proto.CompactTextString(m) }
func (*ReqBody) ProtoMessage()    {}
func (*ReqBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_283b2639549e2cc2, []int{0}
}

func (m *ReqBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqBody.Unmarshal(m, b)
}
func (m *ReqBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqBody.Marshal(b, m, deterministic)
}
func (m *ReqBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqBody.Merge(m, src)
}
func (m *ReqBody) XXX_Size() int {
	return xxx_messageInfo_ReqBody.Size(m)
}
func (m *ReqBody) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqBody.DiscardUnknown(m)
}

var xxx_messageInfo_ReqBody proto.InternalMessageInfo

func (m *ReqBody) GetRptUint64Uins() []uint64 {
	if m != nil {
		return m.RptUint64Uins
	}
	return nil
}

func (m *ReqBody) GetUint32MaxPackageSize() uint32 {
	if m != nil && m.Uint32MaxPackageSize != nil {
		return *m.Uint32MaxPackageSize
	}
	return 0
}

func (m *ReqBody) GetRptBytesOpenid() [][]byte {
	if m != nil {
		return m.RptBytesOpenid
	}
	return nil
}

func (m *ReqBody) GetUint32Appid() uint32 {
	if m != nil && m.Uint32Appid != nil {
		return *m.Uint32Appid
	}
	return 0
}

func (m *ReqBody) GetUint32ReqNick() uint32 {
	if m != nil && m.Uint32ReqNick != nil {
		return *m.Uint32ReqNick
	}
	return 0
}

func (m *ReqBody) GetUint32ReqCountry() uint32 {
	if m != nil && m.Uint32ReqCountry != nil {
		return *m.Uint32ReqCountry
	}
	return 0
}

func (m *ReqBody) GetUint32ReqProvince() uint32 {
	if m != nil && m.Uint32ReqProvince != nil {
		return *m.Uint32ReqProvince
	}
	return 0
}

func (m *ReqBody) GetUint32ReqGender() uint32 {
	if m != nil && m.Uint32ReqGender != nil {
		return *m.Uint32ReqGender
	}
	return 0
}

func (m *ReqBody) GetUint32ReqAllow() uint32 {
	if m != nil && m.Uint32ReqAllow != nil {
		return *m.Uint32ReqAllow
	}
	return 0
}

func (m *ReqBody) GetUint32ReqFaceId() uint32 {
	if m != nil && m.Uint32ReqFaceId != nil {
		return *m.Uint32ReqFaceId
	}
	return 0
}

func (m *ReqBody) GetUint32ReqPerson() uint32 {
	if m != nil && m.Uint32ReqPerson != nil {
		return *m.Uint32ReqPerson
	}
	return 0
}

func (m *ReqBody) GetUint32ReqCity() uint32 {
	if m != nil && m.Uint32ReqCity != nil {
		return *m.Uint32ReqCity
	}
	return 0
}

func (m *ReqBody) GetUint32ReqBirthday() uint32 {
	if m != nil && m.Uint32ReqBirthday != nil {
		return *m.Uint32ReqBirthday
	}
	return 0
}

func (m *ReqBody) GetUint32ReqCityId() uint32 {
	if m != nil && m.Uint32ReqCityId != nil {
		return *m.Uint32ReqCityId
	}
	return 0
}

func (m *ReqBody) GetUint32ReqLang1() uint32 {
	if m != nil && m.Uint32ReqLang1 != nil {
		return *m.Uint32ReqLang1
	}
	return 0
}

func (m *ReqBody) GetUint32ReqLang2() uint32 {
	if m != nil && m.Uint32ReqLang2 != nil {
		return *m.Uint32ReqLang2
	}
	return 0
}

func (m *ReqBody) GetUint32ReqLang3() uint32 {
	if m != nil && m.Uint32ReqLang3 != nil {
		return *m.Uint32ReqLang3
	}
	return 0
}

func (m *ReqBody) GetUint32ReqLflag() uint32 {
	if m != nil && m.Uint32ReqLflag != nil {
		return *m.Uint32ReqLflag
	}
	return 0
}

type UdcUinData struct {
	Uint64Uin            *uint64  `protobuf:"varint,1,opt,name=uint64_uin,json=uint64Uin" json:"uint64_uin,omitempty"`
	BytesOpenid          []byte   `protobuf:"bytes,4,opt,name=bytes_openid,json=bytesOpenid" json:"bytes_openid,omitempty"`
	BytesNick            []byte   `protobuf:"bytes,20002,opt,name=bytes_nick,json=bytesNick" json:"bytes_nick,omitempty"`
	BytesCountry         []byte   `protobuf:"bytes,20003,opt,name=bytes_country,json=bytesCountry" json:"bytes_country,omitempty"`
	BytesProvince        []byte   `protobuf:"bytes,20004,opt,name=bytes_province,json=bytesProvince" json:"bytes_province,omitempty"`
	Uint32Gender         *uint32  `protobuf:"varint,20009,opt,name=uint32_gender,json=uint32Gender" json:"uint32_gender,omitempty"`
	Uint32Allow          *uint32  `protobuf:"varint,20014,opt,name=uint32_allow,json=uint32Allow" json:"uint32_allow,omitempty"`
	Uint32FaceId         *uint32  `protobuf:"varint,20015,opt,name=uint32_face_id,json=uint32FaceId" json:"uint32_face_id,omitempty"`
	BytesPerson          []byte   `protobuf:"bytes,20019,opt,name=bytes_person,json=bytesPerson" json:"bytes_person,omitempty"`
	BytesCity            []byte   `protobuf:"bytes,20020,opt,name=bytes_city,json=bytesCity" json:"bytes_city,omitempty"`
	BytesBirthday        []byte   `protobuf:"bytes,20031,opt,name=bytes_birthday,json=bytesBirthday" json:"bytes_birthday,omitempty"`
	BytesCityId          []byte   `protobuf:"bytes,20032,opt,name=bytes_city_id,json=bytesCityId" json:"bytes_city_id,omitempty"`
	Uint32Lang1          *uint32  `protobuf:"varint,20033,opt,name=uint32_lang1,json=uint32Lang1" json:"uint32_lang1,omitempty"`
	Uint32Lang2          *uint32  `protobuf:"varint,20034,opt,name=uint32_lang2,json=uint32Lang2" json:"uint32_lang2,omitempty"`
	Uint32Lang3          *uint32  `protobuf:"varint,20035,opt,name=uint32_lang3,json=uint32Lang3" json:"uint32_lang3,omitempty"`
	Uint32Lflag          *uint32  `protobuf:"varint,21003,opt,name=uint32_lflag,json=uint32Lflag" json:"uint32_lflag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UdcUinData) Reset()         { *m = UdcUinData{} }
func (m *UdcUinData) String() string { return proto.CompactTextString(m) }
func (*UdcUinData) ProtoMessage()    {}
func (*UdcUinData) Descriptor() ([]byte, []int) {
	return fileDescriptor_283b2639549e2cc2, []int{1}
}

func (m *UdcUinData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UdcUinData.Unmarshal(m, b)
}
func (m *UdcUinData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UdcUinData.Marshal(b, m, deterministic)
}
func (m *UdcUinData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UdcUinData.Merge(m, src)
}
func (m *UdcUinData) XXX_Size() int {
	return xxx_messageInfo_UdcUinData.Size(m)
}
func (m *UdcUinData) XXX_DiscardUnknown() {
	xxx_messageInfo_UdcUinData.DiscardUnknown(m)
}

var xxx_messageInfo_UdcUinData proto.InternalMessageInfo

func (m *UdcUinData) GetUint64Uin() uint64 {
	if m != nil && m.Uint64Uin != nil {
		return *m.Uint64Uin
	}
	return 0
}

func (m *UdcUinData) GetBytesOpenid() []byte {
	if m != nil {
		return m.BytesOpenid
	}
	return nil
}

func (m *UdcUinData) GetBytesNick() []byte {
	if m != nil {
		return m.BytesNick
	}
	return nil
}

func (m *UdcUinData) GetBytesCountry() []byte {
	if m != nil {
		return m.BytesCountry
	}
	return nil
}

func (m *UdcUinData) GetBytesProvince() []byte {
	if m != nil {
		return m.BytesProvince
	}
	return nil
}

func (m *UdcUinData) GetUint32Gender() uint32 {
	if m != nil && m.Uint32Gender != nil {
		return *m.Uint32Gender
	}
	return 0
}

func (m *UdcUinData) GetUint32Allow() uint32 {
	if m != nil && m.Uint32Allow != nil {
		return *m.Uint32Allow
	}
	return 0
}

func (m *UdcUinData) GetUint32FaceId() uint32 {
	if m != nil && m.Uint32FaceId != nil {
		return *m.Uint32FaceId
	}
	return 0
}

func (m *UdcUinData) GetBytesPerson() []byte {
	if m != nil {
		return m.BytesPerson
	}
	return nil
}

func (m *UdcUinData) GetBytesCity() []byte {
	if m != nil {
		return m.BytesCity
	}
	return nil
}

func (m *UdcUinData) GetBytesBirthday() []byte {
	if m != nil {
		return m.BytesBirthday
	}
	return nil
}

func (m *UdcUinData) GetBytesCityId() []byte {
	if m != nil {
		return m.BytesCityId
	}
	return nil
}

func (m *UdcUinData) GetUint32Lang1() uint32 {
	if m != nil && m.Uint32Lang1 != nil {
		return *m.Uint32Lang1
	}
	return 0
}

func (m *UdcUinData) GetUint32Lang2() uint32 {
	if m != nil && m.Uint32Lang2 != nil {
		return *m.Uint32Lang2
	}
	return 0
}

func (m *UdcUinData) GetUint32Lang3() uint32 {
	if m != nil && m.Uint32Lang3 != nil {
		return *m.Uint32Lang3
	}
	return 0
}

func (m *UdcUinData) GetUint32Lflag() uint32 {
	if m != nil && m.Uint32Lflag != nil {
		return *m.Uint32Lflag
	}
	return 0
}

type RspBody struct {
	RptMsgUinData           []*UdcUinData `protobuf:"bytes,11,rep,name=rpt_msg_uin_data,json=rptMsgUinData" json:"rpt_msg_uin_data,omitempty"`
	RptUint64UnfinishedUins []uint64      `protobuf:"varint,12,rep,name=rpt_uint64_unfinished_uins,json=rptUint64UnfinishedUins" json:"rpt_uint64_unfinished_uins,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}      `json:"-"`
	XXX_unrecognized        []byte        `json:"-"`
	XXX_sizecache           int32         `json:"-"`
}

func (m *RspBody) Reset()         { *m = RspBody{} }
func (m *RspBody) String() string { return proto.CompactTextString(m) }
func (*RspBody) ProtoMessage()    {}
func (*RspBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_283b2639549e2cc2, []int{2}
}

func (m *RspBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspBody.Unmarshal(m, b)
}
func (m *RspBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspBody.Marshal(b, m, deterministic)
}
func (m *RspBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspBody.Merge(m, src)
}
func (m *RspBody) XXX_Size() int {
	return xxx_messageInfo_RspBody.Size(m)
}
func (m *RspBody) XXX_DiscardUnknown() {
	xxx_messageInfo_RspBody.DiscardUnknown(m)
}

var xxx_messageInfo_RspBody proto.InternalMessageInfo

func (m *RspBody) GetRptMsgUinData() []*UdcUinData {
	if m != nil {
		return m.RptMsgUinData
	}
	return nil
}

func (m *RspBody) GetRptUint64UnfinishedUins() []uint64 {
	if m != nil {
		return m.RptUint64UnfinishedUins
	}
	return nil
}

func init() {
	proto.RegisterType((*ReqBody)(nil), "oidb_0x5eb.ReqBody")
	proto.RegisterType((*UdcUinData)(nil), "oidb_0x5eb.UdcUinData")
	proto.RegisterType((*RspBody)(nil), "oidb_0x5eb.RspBody")
}

func init() { proto.RegisterFile("oidb_0x5eb.proto", fileDescriptor_283b2639549e2cc2) }

var fileDescriptor_283b2639549e2cc2 = []byte{
	// 663 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x94, 0x4d, 0x6f, 0xd3, 0x30,
	0x18, 0xc7, 0x55, 0xb5, 0x30, 0xed, 0x69, 0xba, 0x75, 0x06, 0x31, 0x0b, 0x09, 0x51, 0x36, 0x36,
	0x22, 0x04, 0xd3, 0x68, 0x19, 0x17, 0x0e, 0x68, 0x1b, 0x02, 0x4d, 0x62, 0x30, 0x05, 0xf5, 0x1c,
	0xb9, 0x89, 0x97, 0x59, 0xeb, 0x92, 0x2c, 0xf1, 0xa0, 0xdd, 0x17, 0xe0, 0xc0, 0x57, 0xe0, 0x04,
	0xbb, 0x70, 0x81, 0xc3, 0xb8, 0xf3, 0xf6, 0x35, 0xf8, 0x30, 0xc8, 0x2f, 0x49, 0x9c, 0xa4, 0xa7,
	0x4a, 0xcf, 0xf3, 0xb3, 0x63, 0xff, 0xfb, 0xf3, 0x03, 0xdd, 0x88, 0xf9, 0x23, 0x77, 0x73, 0xb2,
	0x45, 0x47, 0x1b, 0x71, 0x12, 0xf1, 0x08, 0x41, 0x51, 0x59, 0xb9, 0xbc, 0x0a, 0x73, 0x0e, 0x3d,
	0xdd, 0x89, 0xfc, 0x29, 0x5a, 0x87, 0xc5, 0x24, 0xe6, 0xee, 0x19, 0x0b, 0xf9, 0x93, 0xc7, 0xe2,
	0x27, 0xc5, 0x8d, 0x5e, 0xd3, 0x6e, 0x39, 0x9d, 0x24, 0xe6, 0x43, 0x59, 0x1d, 0xb2, 0x30, 0x45,
	0x5b, 0xb0, 0x2c, 0x98, 0x41, 0xdf, 0x3d, 0x21, 0x13, 0x37, 0x26, 0xde, 0x31, 0x09, 0xa8, 0x9b,
	0xb2, 0x73, 0x8a, 0x9b, 0xbd, 0x86, 0xdd, 0x71, 0xae, 0xab, 0xf6, 0x3e, 0x99, 0x1c, 0xa8, 0xe6,
	0x5b, 0x76, 0x4e, 0x91, 0x0d, 0x5d, 0xb1, 0xfd, 0x68, 0xca, 0x69, 0xea, 0x46, 0x31, 0x0d, 0x99,
	0x8f, 0x5b, 0xbd, 0xa6, 0x6d, 0x39, 0x0b, 0x49, 0xcc, 0x77, 0x44, 0xf9, 0x8d, 0xac, 0xa2, 0x3b,
	0x60, 0xe9, 0x0f, 0x90, 0x38, 0x66, 0x3e, 0xbe, 0x22, 0x77, 0x6d, 0xab, 0xda, 0xb6, 0x28, 0x21,
	0x1b, 0x16, 0x35, 0x92, 0xd0, 0x53, 0x37, 0x64, 0xde, 0x31, 0xfe, 0xfc, 0xa9, 0x21, 0xb9, 0x8e,
	0x6a, 0x38, 0xf4, 0xf4, 0x35, 0xf3, 0x8e, 0xd1, 0x06, 0x20, 0x83, 0xf4, 0xa2, 0xb3, 0x90, 0x27,
	0x53, 0xfc, 0x45, 0xc3, 0xdd, 0x1c, 0xde, 0x55, 0x1d, 0xb4, 0x09, 0xd7, 0x0c, 0x3e, 0x4e, 0xa2,
	0x77, 0x2c, 0xf4, 0x28, 0xbe, 0xd0, 0x0b, 0x96, 0xf2, 0x05, 0x07, 0xba, 0x85, 0x1e, 0xc0, 0x92,
	0xb1, 0x22, 0xa0, 0xa1, 0x4f, 0x13, 0xfc, 0x55, 0xf3, 0x8b, 0x39, 0xff, 0x52, 0x36, 0xd0, 0x7d,
	0xe8, 0x1a, 0x34, 0x19, 0x8f, 0xa3, 0xf7, 0xf8, 0x9b, 0x86, 0x17, 0x72, 0x78, 0x5b, 0xd4, 0xd1,
	0xc3, 0xd2, 0xd9, 0x0f, 0x89, 0x47, 0x5d, 0xe6, 0xe3, 0xef, 0xb5, 0xad, 0x5f, 0x10, 0x8f, 0xee,
	0xf9, 0x95, 0x83, 0xc4, 0x34, 0x49, 0xa3, 0x10, 0x5f, 0xd6, 0xe8, 0x03, 0xd9, 0xa8, 0x44, 0xe8,
	0x31, 0x3e, 0xc5, 0x3f, 0x6a, 0x11, 0xee, 0x32, 0x5e, 0x8d, 0x64, 0xc4, 0x12, 0x7e, 0xe4, 0x93,
	0x29, 0xfe, 0x59, 0x8b, 0x64, 0x47, 0xb7, 0x2a, 0x07, 0x17, 0x7b, 0x8b, 0x83, 0xff, 0xaa, 0x1d,
	0x45, 0x6c, 0xbf, 0xe7, 0x57, 0x32, 0x19, 0x93, 0x30, 0x78, 0x84, 0x7f, 0xd7, 0x32, 0x79, 0x25,
	0xea, 0x33, 0xd8, 0x3e, 0xfe, 0x33, 0x93, 0xed, 0xcf, 0x60, 0x07, 0xf8, 0xef, 0x4c, 0x76, 0x50,
	0x65, 0x0f, 0xc7, 0x24, 0xc0, 0x1f, 0x2f, 0x6a, 0xac, 0xa8, 0xaf, 0xfc, 0x6b, 0x01, 0x0c, 0x7d,
	0x6f, 0xc8, 0xc2, 0xe7, 0x84, 0x13, 0x74, 0x0b, 0xa0, 0x78, 0x34, 0x58, 0x2c, 0x69, 0x39, 0xf3,
	0x67, 0xd9, 0x83, 0x11, 0x3a, 0x57, 0xa4, 0x6f, 0xd8, 0x96, 0xd3, 0x1e, 0x19, 0xc6, 0xdf, 0x06,
	0x50, 0x88, 0x61, 0xb2, 0xe5, 0xcc, 0xcb, 0x9a, 0xb4, 0x78, 0x0d, 0x3a, 0x0a, 0x28, 0x0b, 0x6c,
	0x39, 0x6a, 0xeb, 0x4c, 0xde, 0x7b, 0xb0, 0xa0, 0xb0, 0x8a, 0xb7, 0x96, 0xa3, 0x96, 0xe7, 0xce,
	0xae, 0x81, 0xfe, 0x8f, 0xab, 0xbe, 0xea, 0x97, 0xa7, 0x65, 0x5d, 0x2d, 0x5e, 0x62, 0x49, 0xd4,
	0xec, 0x2d, 0x4a, 0x4b, 0xd7, 0x41, 0xe7, 0x53, 0x33, 0x54, 0x2f, 0xd6, 0x7a, 0xae, 0x66, 0x39,
	0x94, 0xcc, 0xcc, 0x92, 0xd0, 0x56, 0xe6, 0x49, 0x18, 0x42, 0x66, 0x49, 0x48, 0x19, 0xf3, 0x2b,
	0x56, 0x3c, 0xcc, 0xae, 0x98, 0x3b, 0x78, 0x37, 0x8f, 0xac, 0xa4, 0x5f, 0xf6, 0x3d, 0xad, 0x5e,
	0x71, 0xc3, 0xb2, 0x76, 0xfa, 0x86, 0xca, 0xb9, 0x32, 0x54, 0xf8, 0x66, 0x40, 0xfd, 0x0a, 0x54,
	0x88, 0x66, 0x40, 0x03, 0x13, 0x2a, 0x19, 0x96, 0x41, 0x52, 0xaf, 0x0f, 0x0d, 0x98, 0x73, 0xd2,
	0x58, 0x0e, 0xe5, 0x67, 0x6a, 0x6a, 0x9e, 0xa4, 0x81, 0x90, 0xcb, 0xf5, 0x09, 0x27, 0xb8, 0xdd,
	0x6b, 0xda, 0xed, 0xfe, 0x8d, 0x0d, 0x63, 0xb2, 0x17, 0x36, 0xca, 0x69, 0xbd, 0x9f, 0x06, 0x99,
	0x9c, 0x4f, 0xe1, 0xa6, 0x39, 0xd5, 0xc3, 0x43, 0x16, 0xb2, 0xf4, 0x88, 0xfa, 0x6a, 0xc0, 0x5b,
	0x72, 0xc0, 0x2f, 0x17, 0x03, 0x3e, 0xef, 0x8b, 0x51, 0xff, 0x3f, 0x00, 0x00, 0xff, 0xff, 0x2f,
	0x27, 0xa3, 0x13, 0x3d, 0x06, 0x00, 0x00,
}
